<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Impinj.OctaneSdk</name>
    </assembly>
    <members>
        <member name="T:Impinj.OctaneSdk.TagFilter">
            <summary>
            This class contains the settings for a single inventory
            filter.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.TagFilter.#ctor">
            <summary>
            Initializes a new instance of the TagFilter class.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.TagFilter.#ctor(Impinj.OctaneSdk.TagFilter)">
            <summary>
            Initializes a new instance of the TagFilter class (copy
            constructor).
            </summary>
            <param name="tagFilter">
            The object instance to copy.
            </param>
        </member>
        <member name="P:Impinj.OctaneSdk.TagFilter.MemoryBank">
            <summary>
            The memory bank on which the filter is applied. Filters
            may be configured to search for content in the Epc, Tid,
            and User memory banks. Filters may not match against the
            Reserved memory bank.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TagFilter.BitPointer">
            <summary>
            The bit offset in the specified memory bank at which the
            tag mask begins. It is important to note that this is a
            bit offset and need not be word or even byte-aligned.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TagFilter.BitCount">
            <summary>
            The number of bits contained within the tag mask. This
            value is typically calculated by using the following:
            <c>filter.BitCount = filter.TagMask.Length * 4;</c>.
            However, if the desired tag mask is not nibble-aligned
            this value can be used to shorten the filter in a way
            that cannot be expressed using the tag mask hex string.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TagFilter.TagMask">
            <summary>
            The tag mask to apply the filter beginning at the bit
            offset. This string is specified in hexidecimal
            characters (i.e. [0-9a-fA-F]) and may be dressed or
            delimited by a space ( ), dot (.), dash (-), or
            underscore (_). The length of this string must match
            the bit count number of bits unless the desired mask is
            shortened by 1-3 bits using the bit count property. If the
            mask is shortened, the bits masked off this string must be
            set to 0.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TagFilter.FilterOp">
            <summary>
            The filter operation to perform. When tags are seen and
            compared against the filter, the match criterion for the
            tag to be included in the inventory is determined by this
            property.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.FilterSettings">
            <summary>
            This class contains all the filtering information for the
            reader. Readers support up to two individual filters that may
            be combined to isolate a tag population.
            </summary>
            <remarks>
            When the reader is scanning for tags, that scan can be
            optimized by the use of inventory filteres. These filters
            can be used to either include or exclude a specified tag
            population based on memory content.
            </remarks>
        </member>
        <member name="M:Impinj.OctaneSdk.FilterSettings.#ctor">
            <summary>
            Initializes a new instance of the FilterSettings class.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.FilterSettings.#ctor(Impinj.OctaneSdk.FilterSettings)">
            <summary>
            Initializes a new instance of the FilterSettings class
            (copy constructor).
            </summary>
            <param name="filterSettings">
            The object instance to copy.
            </param>
        </member>
        <member name="P:Impinj.OctaneSdk.FilterSettings.Mode">
            <summary>
            Because readers support two distinct filters, those
            filters must be combined using logical operations. This
            property defines how TagFilter1 and TagFilter2 are
            combined.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.FilterSettings.TagFilter1">
            <summary>
            The first tag filter object.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.FilterSettings.TagFilter2">
            <summary>
            The second tag filter object.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ReaderModeFeatures">
            <summary>
            This class contains a variable-length array of
            <see cref="T:Impinj.OctaneSdk.ReaderModeEntry"/> objects. Different reader
            products support different modes and this class
            encapsulates that varying number.
            </summary>
            <seealso cref="T:Impinj.OctaneSdk.ReaderModeEntry"/>
        </member>
        <member name="M:Impinj.OctaneSdk.ReaderModeFeatures.#ctor">
            <summary>
            Initializes a new instance of the
            ReaderModeFeatures class.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ReaderModeFeatures.Entries">
            <summary>
            A variable-length collection of
            <see cref="T:Impinj.OctaneSdk.ReaderModeEntry"/> objects.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ReportBufferOverflowedEventArgs">
            <summary>
            The event that carries report buffer overflow information 
            user application.
            </summary>
            <remarks>
            When the readers on-board report buffer overflows 
            the application is notified through the the SpeedwayReader class 
            <see cref="M:Impinj.OctaneSdk.SpeedwayReader.OnReportBufferOverflowed(Impinj.OctaneSdk.ReportBufferOverflowedEventArgs)"/> method
            and an instance of this class is passed by reference. 
            </remarks>
        </member>
        <member name="P:Impinj.OctaneSdk.ReportBufferOverflowedEventArgs.ReaderIdentity">
            <summary>
            The identity of the reader reporting this event
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ReportBufferOverflowedEventArgs.Timestamp">
            <summary>
            The time associated with the event
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ReaderExceptionOccuredEventArgs">
            <summary>
            The event that carries reader hardware exceptions to the 
            user application.
            </summary>
            <remarks>
            When a reader exception occurs (a hardware or system error on 
            the reader that is unexpected during normal operation)
            the application is notified through the the SpeedwayReader class 
            <see cref="M:Impinj.OctaneSdk.SpeedwayReader.OnReaderExceptionOccured(Impinj.OctaneSdk.ReaderExceptionOccuredEventArgs)"/> method 
            and an instance of this class is passed by reference. 
            </remarks>
        </member>
        <member name="P:Impinj.OctaneSdk.ReaderExceptionOccuredEventArgs.ReaderIdentity">
            <summary>
            The identity of the reader reporting this event
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ReaderExceptionOccuredEventArgs.Timestamp">
            <summary>
            The time associated with the event
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ReaderExceptionOccuredEventArgs.Message">
            <summary>
            A string message describing the exception associated with this event
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.MemoryBank">
            <summary>
            This enumeration defines the memory banks available in Class1
            Generation2 (C1G2) compliant tags. Not all memory banks are
            available on all tags. For more information regarding tag
            memory banks, see the EPCglobal C1G2 Specification.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.MemoryBank.None">
            <summary>
            This is an invalid memory bank not defined by C1G2. It is
            used to denote an uninitialized object property.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.MemoryBank.Reserved">
            <summary>
            The Reserved memory bank is where the access and kill
            passwords are stored on the tag.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.MemoryBank.Epc">
            <summary>
            The EPC memory bank contains the Electronic Product Code
            (EPC) information of the tag. It also contains a CRC word
            and a Protocol Control (PC) word.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.MemoryBank.Tid">
            <summary>
            The TID memory bank contains Tag Identification (TID)
            information. Information such as manufacturer and/or
            serial numbers may be stored here.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.MemoryBank.User">
            <summary>
            The User memory bank contains information related to the
            RFID use case and is not defined specifically by C1G2.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ListOfAntennaStatus">
            <summary>
            This class contains a variable-length array of
            <see cref="T:Impinj.OctaneSdk.AntennaStatus"/> objects. Different reader
            products support different numbers of antennas and this class
            encapsulates that varying number.
            </summary>
            <seealso cref="T:Impinj.OctaneSdk.AntennaStatus"/>
        </member>
        <member name="F:Impinj.OctaneSdk.ListOfAntennaStatus.Elements">
            <summary>
            A variable-length array of <see cref="T:Impinj.OctaneSdk.AntennaStatus"/>
            objects.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ListOfAntennaStatus.#ctor">
            <summary>
            Initializes a new instance of the ListOfAntennaStatus
            class.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ListOfAntennaStatus.#ctor(Impinj.OctaneSdk.ListOfAntennaStatus)">
            <summary>
            Initializes a new instance of the ListOfAntennaStatus
            class (copy constructor).
            </summary>
            <param name="listOfAntennaStatus">
            The object instance to copy.
            </param>
        </member>
        <member name="M:Impinj.OctaneSdk.ListOfAntennaStatus.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Implements the GetEnumerator method of the IEnumerator
            interface.
            </summary>
            <returns>
            IEnumerator
            </returns>
        </member>
        <member name="M:Impinj.OctaneSdk.ListOfAntennaStatus.GetEnumerator">
            <summary>
            Accessor method for the <see cref="T:Impinj.OctaneSdk.AntennaStatus"/>
            array.
            </summary>
            <returns>
            An enumerator for the <see cref="T:Impinj.OctaneSdk.AntennaStatus"/>
            array.
            </returns>
        </member>
        <member name="M:Impinj.OctaneSdk.ListOfAntennaStatus.Add(Impinj.OctaneSdk.AntennaStatus)">
            <summary>
            Adds a new <see cref="T:Impinj.OctaneSdk.AntennaStatus"/> object to the
            Elements array. The new object is added to the array based
            on the port number found within the object.
            </summary>
            <param name="antennaStatus">
            The <see cref="T:Impinj.OctaneSdk.AntennaStatus"/> object to add.
            </param>
        </member>
        <member name="P:Impinj.OctaneSdk.ListOfAntennaStatus.Item(System.Int32)">
            <summary>
            Overload of the [] operator. The <see cref="T:Impinj.OctaneSdk.AntennaStatus"/>
            object of the specified antenna port is returned.
            </summary>
            <param name="antennaPortNumber">
            The 1-based antenna port number to retrieve.
            </param>
            <returns>
            The requested <see cref="T:Impinj.OctaneSdk.AntennaStatus"/> object, if
            present.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when <paramref name="antennaPortNumber"/> is invalid.
            </exception>
        </member>
        <member name="T:Impinj.OctaneSdk.Settings">
            <summary>
            This class contains all the settings necessary for a reader to
            begin singulating. It is a composite class consisting of other
            composite classes containing individual settings.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.Settings.Save(System.String)">
            <summary>
            Save these settings to a file as XML.
            </summary>
            <param name="path">The path name of the file.</param>
            <exception cref="T:Impinj.OctaneSdk.SettingsFileException">
            Thrown when the file can not be created.</exception>
        </member>
        <member name="M:Impinj.OctaneSdk.Settings.Load(System.String)">
            <summary>
            Read the XML representation of settings from
            a file and return a new Settings instance with
            those values.
            </summary>
            <param name="path">The path name of the file.</param>
            <returns>instance of class Settings based on file contents</returns>
            <exception cref="T:Impinj.OctaneSdk.SettingsFileException">
            Thrown when the file does not exist or is malformed.</exception>
        </member>
        <member name="M:Impinj.OctaneSdk.Settings.TryLoad(System.String,Impinj.OctaneSdk.Settings@)">
            <summary>
            Try to read the XML representation of settings from
            a file and pass back a new Settings instance with
            those values.
            </summary>
            <param name="path">The path name of the file.</param>
            <param name="settings">Pass-back of the settings.</param>
            <returns>True if the file was successfully loaded.
            False indicates the file does not exist or is malformed.</returns>
        </member>
        <member name="M:Impinj.OctaneSdk.Settings.#ctor">
            <summary>
            Initializes a new instance of the Settings class.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.Settings.#ctor(Impinj.OctaneSdk.Settings)">
            <summary>
            Initializes a new instance of the Settings class (copy
            constructor).
            </summary>
            <param name="settings">
            The object instance to copy.
            </param>
        </member>
        <member name="P:Impinj.OctaneSdk.Settings.Label">
            <summary>
            A short name, like a file name, for these settings.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Settings.Description">
            <summary>
            A short description of these settings, like a comment
            or remark.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Settings.ReaderMode">
            <summary>
            This property determines which reader mode the reader uses
            with singulating.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Settings.SearchMode">
            <summary>
            This property determines which search mode the reader uses
            with singulating.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Settings.Session">
            <summary>
            This property determines which C1G2 session the reader
            uses with singulating.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Settings.TagPopulationEstimate">
            <summary>
            This property determines which C1G2 session the reader
            uses with singulating.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Settings.Filters">
            <summary>
            Optionally select a portion of the tag population
            to participate in singulation.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Settings.Antennas">
            <summary>
            Per-antenna settings: power, sensitivity, etc.
            May be itterated with foreach or subscripted
            by antenna port number.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Settings.TxFrequenciesInMhz">
            <summary>
            Transmit frequencies to use in regions that allow it.
            An empty list means the reader chooses.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Settings.ReducedPowerTxFrequenciesInMhz">
            <summary>
            For the FCC region only, reduce the transmit power
            on certain frequencies. Used to mitigate interference.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Settings.LowDutyCycle">
            <summary>
            Optionally reduce RF activity.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Settings.AutoStart">
            <summary>
            Optionally set the reader to automatically start singulating.
            It is always possible to manually start the reader
            using <see cref="M:Impinj.OctaneSdk.SpeedwayReader.Start"/>.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Settings.AutoStop">
            <summary>
            Optionally set the reader to automatically stop singulating.
            It is always possible to manually stop the reader
            using <see cref="M:Impinj.OctaneSdk.SpeedwayReader.Stop"/>.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Settings.Report">
            <summary>
            Set how tags are reported and select optional
            report fields.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Settings.Gpis">
            <summary>
            Enable GPI events on specific GPI ports.
            May be itterated with foreach or subscripted
            by GPI port number.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Settings.KeepAlive">
            <summary>
            Optionally cause the reader to send a keep-alive
            message periodically.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Settings.IsTimestampCorrectionEnabled">
            <summary>
            Enable adjustment of event and tag report timestamps
            based on estimated time difference between the
            application host and the reader.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.GpiChangedEventArgs">
            <summary>
            The event that carries GPI change information to the 
            user application.
            </summary>
            <remarks>
            When the readers GPI port status changes, 
            the application is notified through the the SpeedwayReader class 
            <see cref="E:Impinj.OctaneSdk.SpeedwayReader.GpiChanged"/>,
            <see cref="M:Impinj.OctaneSdk.SpeedwayReader.OnGpiChanged(Impinj.OctaneSdk.GpiChangedEventArgs)"/>, 
            <see cref="M:Impinj.OctaneSdk.SpeedwayReader.OnGpi1Changed(Impinj.OctaneSdk.GpiChangedEventArgs)"/>, 
            <see cref="M:Impinj.OctaneSdk.SpeedwayReader.OnGpi2Changed(Impinj.OctaneSdk.GpiChangedEventArgs)"/>, 
            <see cref="M:Impinj.OctaneSdk.SpeedwayReader.OnGpi3Changed(Impinj.OctaneSdk.GpiChangedEventArgs)"/>, and
            <see cref="M:Impinj.OctaneSdk.SpeedwayReader.OnGpi4Changed(Impinj.OctaneSdk.GpiChangedEventArgs)"/> methods
            and an instance of this class is passed by reference. 
            </remarks>
        </member>
        <member name="P:Impinj.OctaneSdk.GpiChangedEventArgs.ReaderIdentity">
            <summary>
            The identity of the reader reporting this event
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.GpiChangedEventArgs.Timestamp">
            <summary>
            The time associated with the event
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.GpiChangedEventArgs.PortNumber">
            <summary>
            The GPI port number associated with this event
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.GpiChangedEventArgs.State">
            <summary>
            The new GPI port state associated with this event
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.OperationalState">
            <summary>
            Indicates the status of the reader's RFID operations.
            </summary>
            <remarks>
            The <see cref="T:Impinj.OctaneSdk.Status"/> returned by
            <see cref="M:Impinj.OctaneSdk.SpeedwayReader.QueryStatus(Impinj.OctaneSdk.StatusRefresh)"/>
            contains the state of RFID operations.
            </remarks>
        </member>
        <member name="F:Impinj.OctaneSdk.OperationalState.Unknown">
            <summary>
            The operational state is
            not known. This usually means that communication
            with the reader is not established.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.OperationalState.NotSet">
            <summary>
            The reader has no <see cref="T:Impinj.OctaneSdk.Settings"/>.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.OperationalState.ForeignSettings">
            <summary>
            There are settings on the reader that
            are not from Octane SDK. Usually means
            some other application left settings
            on the reader.
            Use <see cref="M:Impinj.OctaneSdk.SpeedwayReader.ClearSettings"/>.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.OperationalState.Ready">
            <summary>
            The reader has <see cref="T:Impinj.OctaneSdk.Settings"/>
            and is idle.
            No power is emitted by the antennas.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.OperationalState.Singulating">
            <summary>
            The reader is singulating.
            Power is emitted by the enabled antennas.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ReadTidMemoryResult">
            <summary>
            Class that contains the result of a
            <see cref="M:Impinj.OctaneSdk.SpeedwayReader.ReadTidMemory(Impinj.OctaneSdk.ReadTidMemoryParams)"/>
            operation
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.CommonAccessResult">
            <summary>
            This class contains all the common results for tag access.
            </summary>
            <remarks>
            Several properties required for tag access results are shared
            between the various methods. To avoid duplicating these
            properties in the results class of each individual method,
            this class is used to encapsulate them. As this class should
            always be a base class, it is declared abstract.
            </remarks>
        </member>
        <member name="M:Impinj.OctaneSdk.CommonAccessResult.assignCommonResult(Impinj.OctaneSdk.CommonAccessResult)">
            <summary>
            This protected routine is called from the various copy
            constructors to assign the common properties from one
            object instance to another.
            </summary>
            <param name="commonAccessResult">
            The object instance to assign.
            </param>
        </member>
        <member name="P:Impinj.OctaneSdk.CommonAccessResult.TagAccessed">
            <summary>
            The tag on which the operation was performed.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.CommonAccessResult.Result">
            <summary>
            The overall result of the operation.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ReadTidMemoryResult.#ctor">
            <summary>
            Initializes a new instance of the ReadTidMemoryResult class 
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ReadTidMemoryResult.#ctor(Impinj.OctaneSdk.CommonAccessResult)">
            <summary>
            Initializes a new instance of the ReadTidMemoryResult class 
            from a commonAccessResult instance
            </summary>
            <param name="commonAccessResult">initializer</param>
        </member>
        <member name="M:Impinj.OctaneSdk.ReadTidMemoryResult.#ctor(Impinj.OctaneSdk.ReadTidMemoryResult)">
            <summary>
            Initializes a new instance of the ReadTidMemoryResult class 
            (copy constructor)
            </summary>
            <param name="readTidMemoryResult">instance to copy</param>
        </member>
        <member name="P:Impinj.OctaneSdk.ReadTidMemoryResult.ReadResult">
            <summary>
            The result of the tid memory read operation
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ProgramKillPasswordParams">
            <summary>
            Class to carry the configuration for a
            <see cref="M:Impinj.OctaneSdk.SpeedwayReader.ProgramKillPassword(Impinj.OctaneSdk.ProgramKillPasswordParams)"/> operation
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.CommonAccessParams">
            <summary>
            This class contains all the common parameters for tag access.
            </summary>
            <remarks>
            Several properties required for tag access are shared between
            the various methods. To avoid duplicating these properties in
            the parameters class of each individual method, this class is
            used to encapsulate them. As this class should always be a
            base class, it is declared abstract.
            </remarks>
        </member>
        <member name="M:Impinj.OctaneSdk.CommonAccessParams.assignCommonParams(Impinj.OctaneSdk.CommonAccessParams)">
            <summary>
            This protected routine is called from the various copy
            constructors to assign the common properties from one
            object instance to another.
            </summary>
            <param name="commonAccessParams">
            The object instance to copy.
            </param>
        </member>
        <member name="P:Impinj.OctaneSdk.CommonAccessParams.TargetTag">
            <summary>
            The tag on which the access operation is to be performed.
            When set to null, the operation is performed on the next
            tag singulated by the reader. When set to a string, the
            string consists of hexidecimal characters (i.e.
            [0-9a-fA-F]) and may optionally include 'x' or 'X' as
            don't-care values. The string must be word aligned, so it
            must be a multiple of 4 characters long. The PC-bits of
            target tag are inferred from the length of the string.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.CommonAccessParams.AntennaPortNumber">
            <summary>
            The antenna port on which the tag access should occur.
            When set to 0, all enabled antennas in the current
            Settings object.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.CommonAccessParams.AccessPassword">
            <summary>
            The access password used to transition the tag to the
            secured state prior to executing the tag access. If set to
            null, no access password is used and the tag access will
            occur with the tag in the open state.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.CommonAccessParams.RetryCount">
            <summary>
            The number of times the reader should retry the access.
            The reader automatically adjusts the retry mechanism based
            on the type of operation and type of failure. This value
            is merely an indication of the number of retries that
            should occur before failure is declared.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.CommonAccessParams.TimeoutInMs">
            <summary>
            How long the reader should search for the target tag
            before timing out. The value is specified in milliseconds.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ProgramKillPasswordParams.#ctor">
            <summary>
            Initializes a new instance of the ProgramKillPasswordParams class
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ProgramKillPasswordParams.#ctor(Impinj.OctaneSdk.CommonAccessParams)">
            <summary>
            Initializes a new instance of the ProgramKillPasswordParams class
            from a commonAccessParams instance
            </summary>
            <param name="commonAccessParams">initializer</param>
        </member>
        <member name="M:Impinj.OctaneSdk.ProgramKillPasswordParams.#ctor(Impinj.OctaneSdk.ProgramKillPasswordParams)">
            <summary>
            Initializes a new instance of the ProgramKillPasswordParams class
            (copy constructor)
            </summary>
            <param name="programKillPasswordParams">instance to copy</param>
        </member>
        <member name="P:Impinj.OctaneSdk.ProgramKillPasswordParams.NewKillPassword">
            <summary>
            The new kill password (change to) for the tag.
            </summary>
            <remarks>
            In C1G2, settings a tag with a zero (00000000)
            kill password cannot be killed.  The kill password
            string must contain 8 hexidecimal characters
            ( i.e. [0-9a-fA-f])
            </remarks>
        </member>
        <member name="P:Impinj.OctaneSdk.ProgramKillPasswordParams.IsWriteVerified">
            <summary>
            Verify the kill password program operation with a read
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ProgramKillPasswordParams.IsBlockWriteUsed">
            <summary>
            Use block write to write the new kill password
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ProgramKillPasswordParams.BlockWriteWordCount">
            <summary>
            If block write is used above, specifies the size of the
            block
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ProgramKillPasswordParams.LockType">
            <summary>
            Sets theh lock status for the kill password memory after the program
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ProgramEpcParams">
            <summary>
            Class that contains the configuration for a 
            <see cref="M:Impinj.OctaneSdk.SpeedwayReader.ProgramEpc(Impinj.OctaneSdk.ProgramEpcParams)"/>
            operation
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ProgramEpcParams.#ctor">
            <summary>
            Initializes a new instance of the ProgramEpcParams class
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ProgramEpcParams.#ctor(Impinj.OctaneSdk.CommonAccessParams)">
            <summary>
            Initializes a new instance of the ProgramEpcParams class
            from a commonAccessParams instance
            </summary>
            <param name="commonAccessParams">initializer</param>
        </member>
        <member name="M:Impinj.OctaneSdk.ProgramEpcParams.#ctor(Impinj.OctaneSdk.ProgramEpcParams)">
            <summary>
            Initializes a new instance of the ProgramEpcParams class
            (copy constructor)
            </summary>
            <param name="programEpcParams">instance to copy</param>
        </member>
        <member name="P:Impinj.OctaneSdk.ProgramEpcParams.NewEpc">
            <summary>
            The epc value to program as a string of hex values
            </summary>
            <remarks>
            The string consists of hexidecimal characters (i.e.
            [0-9a-fA-F]). The string must contain a multiple of
            4 hexadecimal characters to enforce the 16-bit
            resolution of C1G2 epcs. A maximum length of 124
            hexadecimal characters (496 bits) is permitted in
            the OctaneSDK and the C1G2 specification.  NOTE:
            not all tags contain 496 bits of EPC memory.s
            </remarks>
        </member>
        <member name="P:Impinj.OctaneSdk.ProgramEpcParams.IsWriteVerified">
            <summary>
            Verify the program operation with a read
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ProgramEpcParams.IsBlockWriteUsed">
            <summary>
            use block write to write the new EPCs
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ProgramEpcParams.BlockWriteWordCount">
            <summary>
            If block write is used above, specifies the size of the
            block
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ProgramEpcParams.LockType">
            <summary>
            sets theh lock status for the EPC memory bank after the program
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.PrimitiveSetQtConfigResult">
            <summary>
            The low level access primitive for conveying the set QT
            configuration result
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.PrimitiveResult">
            <summary>
             The base class for all tag access primitive results
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.PrimitiveResult.Clone">
            <summary>
            Duplicate the instance
            </summary>
            <returns>Object</returns>
        </member>
        <member name="M:Impinj.OctaneSdk.PrimitiveSetQtConfigResult.#ctor">
            <summary>
            Construct a PrimitiveSetQtConfigResult instance
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.PrimitiveSetQtConfigResult.#ctor(Impinj.OctaneSdk.PrimitiveSetQtConfigResult)">
            <summary>
            Construct a PrimitiveSetQtConfigResult instance
            (copy constructor)
            </summary>
            <param name="primitiveSetQtConfigResult">instance to copy</param>
        </member>
        <member name="M:Impinj.OctaneSdk.PrimitiveSetQtConfigResult.Clone">
            <summary>
            Duplicate the instance
            </summary>
            <returns>PrimitiveSetQtConfigResult</returns>
        </member>
        <member name="P:Impinj.OctaneSdk.PrimitiveSetQtConfigResult.Result">
            <summary>
            The access result of the SetQtConfig primitive operation
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.PrimitiveSetBlockPermalockResult">
            <summary>
            The low level access primitive for conveying the set block
            permalock result
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.PrimitiveSetBlockPermalockResult.#ctor">
            <summary>
            Construct a PrimitiveSetBlockPermalockResult instance
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.PrimitiveSetBlockPermalockResult.#ctor(Impinj.OctaneSdk.PrimitiveSetBlockPermalockResult)">
            <summary>
            Construct a PrimitiveSetBlockPermalockResult instance
            (copy constructor)
            </summary>
            <param name="primitiveSetBlockPermalockResult">instance to copy</param>
        </member>
        <member name="M:Impinj.OctaneSdk.PrimitiveSetBlockPermalockResult.Clone">
            <summary>
            Duplicate the instance
            </summary>
            <returns>PrimitiveSetBlockPermalockResult</returns>
        </member>
        <member name="P:Impinj.OctaneSdk.PrimitiveSetBlockPermalockResult.Result">
            <summary>
            The access result of the setBlockPermalock primitive operation
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.PrimitiveLockParams">
            <summary>
            The low level access primitive for locking a tag
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.PrimitiveParams">
            <summary>
            The base class for carrying parameters for all primitive tag
            access operations
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.PrimitiveParams.Clone">
            <summary>
            Duplicate the instance
            </summary>
            <returns>Object</returns>
        </member>
        <member name="M:Impinj.OctaneSdk.PrimitiveLockParams.#ctor">
            <summary>
            Construct a PrimitiveLockParams instance
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.PrimitiveLockParams.#ctor(Impinj.OctaneSdk.PrimitiveLockParams)">
            <summary>
            Construct a PrimitiveLockParams instance
            (copy constructor)
            </summary>
            <param name="primitiveLockParams">instance to copy</param>
        </member>
        <member name="M:Impinj.OctaneSdk.PrimitiveLockParams.Clone">
            <summary>
            Duplicate the instance
            </summary>
            <returns>PrimitiveLockParams</returns>
        </member>
        <member name="P:Impinj.OctaneSdk.PrimitiveLockParams.LockAccessPassword">
            <summary>
            The new lock state for the tag access password
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.PrimitiveLockParams.LockKillPassword">
            <summary>
            The new lock state for the tag kill password
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.PrimitiveLockParams.LockEpcMemory">
            <summary>
            The new lock state for the tag EPC memory
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.PrimitiveLockParams.LockTidMemory">
            <summary>
            The new lock state for the tag TID memory
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.PrimitiveLockParams.LockUserMemory">
            <summary>
            The new lock state for the tag user memory
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.LockTagResult">
            <summary>
            Class to carry the results of a 
            <see cref="M:Impinj.OctaneSdk.SpeedwayReader.LockTag(Impinj.OctaneSdk.LockTagParams)"/> operation
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.LockTagResult.#ctor">
            <summary>
            Initializes a new instance of the LockTagResult class 
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.LockTagResult.#ctor(Impinj.OctaneSdk.CommonAccessResult)">
            <summary>
            Initializes a new instance of the LockTagResult class
            from a commonAccessResult
            </summary>
            <param name="commonAccessResult">initializer</param>
        </member>
        <member name="M:Impinj.OctaneSdk.LockTagResult.#ctor(Impinj.OctaneSdk.LockTagResult)">
            <summary>
            Initializes a new instance of the LockTagResult class 
            (copy constructor)
            </summary>
            <param name="lockTagResult">instance to copy</param>
        </member>
        <member name="P:Impinj.OctaneSdk.LockTagResult.LockResult">
            <summary>
            The result of the lock operation
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.TagReport">
            <summary>
            This class contains information for a tag report 
            </summary>
            <remarks>
            Tag reports are returned through the OctaneSDK library 
            via the SpeedwayReader class 
            <see cref="M:Impinj.OctaneSdk.SpeedwayReader.QueryTagReport"/>,
            <see cref="M:Impinj.OctaneSdk.SpeedwayReader.QueryTags(System.Int32)"/>,
            and indirectly through the 
            <see cref="M:Impinj.OctaneSdk.SpeedwayReader.OnTagsReported(Impinj.OctaneSdk.TagsReportedEventArgs)"/>
            methods.  The tag report is a wrapped array of Tags.
            </remarks>
        </member>
        <member name="M:Impinj.OctaneSdk.TagReport.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TagReport.Timestamp">
            <summary> 
            The timestamp the report was generated 
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TagReport.ReaderIdentity">
            <summary>
            The reader identity that generated the report
            </summary>
            <remarks>
            See <see cref="P:Impinj.OctaneSdk.SpeedwayReader.ReaderIdentity"/>
            </remarks>
        </member>
        <member name="P:Impinj.OctaneSdk.TagReport.ReaderIdentityAsString">
            <summary>
            The reader identity that generated the report as a string
            </summary>
            <remarks>
            See <see cref="P:Impinj.OctaneSdk.SpeedwayReader.ReaderIdentity"/>
            </remarks>
        </member>
        <member name="P:Impinj.OctaneSdk.TagReport.Tags">
            <summary> A list of Tag objects </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.SpeedwayReader">
            <summary>
            Control and data for a single Speedway RFID Reader.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.SpeedwayReader.KillTag(Impinj.OctaneSdk.KillTagParams)">
            <summary>Kill a tag</summary>
            <param name="accessParams">parameters to control the tag access</param>
            <returns>Result status of Kill operation</returns>
        </member>
        <member name="M:Impinj.OctaneSdk.SpeedwayReader.LockTag(Impinj.OctaneSdk.LockTagParams)">
            <summary>Lock a tag</summary>
            <param name="accessParams">parameters to control the tag access</param>
            <returns>Result status of Lock operation</returns>
        </member>
        <member name="M:Impinj.OctaneSdk.SpeedwayReader.ProgramAccessPassword(Impinj.OctaneSdk.ProgramAccessPasswordParams)">
            <summary> Program the access password of a tag.</summary>
            <param name="accessParams">parameters to control the tag access</param>
            <returns>Result status of Program operation</returns>
        </member>
        <member name="M:Impinj.OctaneSdk.SpeedwayReader.ProgramKillPassword(Impinj.OctaneSdk.ProgramKillPasswordParams)">
            <summary>Program the kill password of a tag.</summary>
            <param name="accessParams">parameters to control the tag access</param>
            <returns>Result status of Program operation</returns>
        </member>
        <member name="M:Impinj.OctaneSdk.SpeedwayReader.ProgramEpc(Impinj.OctaneSdk.ProgramEpcParams)">
            <summary>Program the EPC and PC bits on a tag, optionally setting the
            access password, and optionally locking the tag. PC Bits are calculated automatically.</summary>
            <param name="accessParams">parameters to control the tag access</param>
            <returns>Result status of Program operation. Note: The number of words written is EPC words + 1, to include PC Bits word</returns>
        </member>
        <member name="M:Impinj.OctaneSdk.SpeedwayReader.ProgramUserBlock(Impinj.OctaneSdk.ProgramUserBlockParams)">
            <summary>Program a portion of a tags user memory.</summary>
            <param name="accessParams">parameters to control the tag access</param>
            <returns>Result status of Program operation</returns>
        </member>
        <member name="M:Impinj.OctaneSdk.SpeedwayReader.ProgramUserMemory(Impinj.OctaneSdk.ProgramUserMemoryParams)">
            <summary>Program all of a tags user memory</summary>
            <param name="accessParams">parameters to control the tag access</param>
            <returns>Result status of Program operation</returns>
        </member>
        <member name="M:Impinj.OctaneSdk.SpeedwayReader.ReadAccessPassword(Impinj.OctaneSdk.ReadAccessPasswordParams)">
            <summary>Reads the current access password on the device</summary>
            <param name="accessParams">parameters to control the tag access</param>
            <returns>Result status of Read operation (including read data)</returns>
        </member>
        <member name="M:Impinj.OctaneSdk.SpeedwayReader.ReadKillPassword(Impinj.OctaneSdk.ReadKillPasswordParams)">
            <summary>Reads the current kill password on the device</summary>
            <param name="accessParams">parameters to control the tag access</param>
            <returns>Result status of Read operation (including read data)</returns>
        </member>
        <member name="M:Impinj.OctaneSdk.SpeedwayReader.ReadTidMemory(Impinj.OctaneSdk.ReadTidMemoryParams)">
            <summary>Reads the TID (Tag ID) memory on a tag</summary>
            <param name="accessParams">parameters to control the tag access</param>
            <returns>Result status of Read operation (including read data)</returns>
        </member>
        <member name="M:Impinj.OctaneSdk.SpeedwayReader.ReadUserMemory(Impinj.OctaneSdk.ReadUserMemoryParams)">
            <summary>Reads the user memory on a tag</summary>
            <param name="accessParams">parameters to control the tag access</param>
            <returns>Result status of Read operation (including read data)</returns>
        </member>
        <member name="M:Impinj.OctaneSdk.SpeedwayReader.RunPrimitiveSequence(Impinj.OctaneSdk.RunPrimitiveSequenceParams)">
            <summary>Runs a sequence of primitive Access operations </summary>
            <param name="accessParams">parameters to control the tag access</param>
            <remarks>See <see cref="T:Impinj.OctaneSdk.PrimitiveParams"/> 
            for possible access operations</remarks>
            <returns>Result status of the primitive sequence</returns>
        </member>
        <member name="M:Impinj.OctaneSdk.SpeedwayReader.Log(Impinj.OctaneSdk.LogLevel,System.String,System.Object[])">
            <summary>
            Record a log using the OctaneSDK
            </summary>
            <param name="level">The severity level of the occurrence</param>
            <param name="format">a string containing the message format</param>
            <param name="args">an array containing the arguments to 
            complete the format string</param>
        </member>
        <member name="M:Impinj.OctaneSdk.SpeedwayReader.#ctor">
            <summary>
            Construct a SpeedwayReader.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.SpeedwayReader.RegisterExtension(Impinj.OctaneSdk.IOctaneSDKExtension)">
            <summary>
            Register an Octane SDK extension
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.SpeedwayReader.Connect(System.String)">
            <summary>
            Connect to a Speedway reader.
            </summary>
            <remarks>
            Events and reports are held until either ApplySettings,
            ApplyFactorySettings, or ResumeEventsAndReports is done.
            </remarks>
            <param name="readerName">The name or IP
            address of the reader.</param>
            <exception cref="T:Impinj.OctaneSdk.ConnectException">
            Thrown when the connection attempt fails.
            Most likely the reader name is invalid, the reader
            is busy, or there is already a connection.</exception>
        </member>
        <member name="M:Impinj.OctaneSdk.SpeedwayReader.Connect(System.String,System.Int32)">
            <summary>
            Connect to a Speedway reader.
            </summary>
            <remarks>
            Events and reports are held until either ApplySettings,
            ApplyFactorySettings, or ResumeEventsAndReports is done.
            </remarks>
            <param name="readerName">The name or IP
            address of the reader.</param>
            <param name="tcpPort">A TCP port number for
            the LLRP connection or 0 for the standard port.</param>
            <exception cref="T:Impinj.OctaneSdk.ConnectException">
            Thrown when the connection attempt fails.
            Most likely the reader name is invalid, the reader
            is busy, or there is already a connection.</exception>
        </member>
        <member name="M:Impinj.OctaneSdk.SpeedwayReader.Disconnect">
            <summary>
            Disconnect from the Speedway reader.
            </summary>
            <remarks>
            Use this method to disconnect from a reader, and to
            clean up a lost connection.
            </remarks>
            <exception cref="T:Impinj.OctaneSdk.OctaneSdkException">
            Thrown when there is no connection or when the
            reader replies with an error.</exception>
        </member>
        <member name="M:Impinj.OctaneSdk.SpeedwayReader.ClearSettings">
            <summary>
            Clear (reset) the RFID settings on the reader.
            </summary>
            <remarks>
            This returns the reader to a factory state where no
            settings are on the reader. In this state the
            reader can do no RFID operations.
            </remarks>
            <exception cref="T:Impinj.OctaneSdk.OctaneSdkException">
            Thrown when there is no connection or when the
            reader replies with an error.</exception>
        </member>
        <member name="M:Impinj.OctaneSdk.SpeedwayReader.QueryFeatureSet">
            <summary>
            Query the features of the reader.
            </summary>
            <remarks>
            The features include the available modes, powers, frequencies,
            number of antennas, regulatory region, etc.
            </remarks>
            <returns>The features of the reader.</returns>
            <exception cref="T:Impinj.OctaneSdk.OctaneSdkException">
            Thrown when there is no connection or when the
            reader replies with an error.</exception>
        </member>
        <member name="M:Impinj.OctaneSdk.SpeedwayReader.QueryStatus(Impinj.OctaneSdk.StatusRefresh)">
            <summary>
            Query the status of the reader including antennas, GPIs,
            and operation.
            </summary>
            <remarks>
            The status includes connection status, operation (RFID)
            status, antenna connectivity, GPI levels, etc.
            <para>
            Normally the status is maintained internally based on
            event notifications from the reader.
            There are times when the application wants to be sure
            the reader is checked for status even though the checking
            takes longer. For example, GPIs that are not enabled
            do not produce events when the input level changes and
            the reader must be asked to check the GPIs.
            </para>
            <para>
            Typically an application is only interested in the status
            that is maintained and needs the speed of not checking
            the reader.
            </para>
            </remarks>
            <param name="statusRefresh">What status to assure
            is retrieved from the reader.</param>
            <returns>Status of the reader.</returns>
            <exception cref="T:Impinj.OctaneSdk.OctaneSdkException">
            Thrown when there is no connection or when the
            reader replies with an error.</exception>
        </member>
        <member name="M:Impinj.OctaneSdk.SpeedwayReader.QueryStatus">
            <summary>
            Query the status of the reader. Same as
            QueryStatus(StatusRefresh.None).
            </summary>
            <returns>Status of the reader.</returns>
            <exception cref="T:Impinj.OctaneSdk.OctaneSdkException">
            Thrown when there is no connection or when the
            reader replies with an error.</exception>
        </member>
        <member name="M:Impinj.OctaneSdk.SpeedwayReader.QueryFactorySettings">
            <summary>
            Query the Settings according to the reader defaults.
            </summary>
            <remarks>
            Typically an application queries the factory settings,
            then adjusts them to suit the application's purpose,
            the uses ApplySettings.
            </remarks>
            <returns>Settings based on the factory values
            of the reader.</returns>
            <exception cref="T:Impinj.OctaneSdk.OctaneSdkException">
            Thrown when there is no connection or when the
            reader replies with an error.</exception>
        </member>
        <member name="M:Impinj.OctaneSdk.SpeedwayReader.QuerySettings">
            <summary>
            Query the Settings currently on the reader.
            </summary>
            <returns>Settings based on the current values
            of the reader.</returns>
            <exception cref="T:Impinj.OctaneSdk.OctaneSdkException">
            Thrown when there is no connection or when the
            reader replies with an error.</exception>
        </member>
        <member name="M:Impinj.OctaneSdk.SpeedwayReader.ApplySettings(Impinj.OctaneSdk.Settings)">
            <summary>
            Change the settings of the reader to those passed in.
            </summary>
            <remarks>
            The settings on the reader are first cleared the
            same way <see cref="M:Impinj.OctaneSdk.SpeedwayReader.ClearSettings"/> does.
            Then the passed-in settings are put on the reader.
            <para>
            Events and reports are delivered after a successful
            ApplySettings.
            </para>
            </remarks>
            <param name="settings">The settings to put on the reader.</param>
            <exception cref="T:Impinj.OctaneSdk.OctaneSdkException">
            Thrown when there is no connection or when the
            reader replies with an error.</exception>
        </member>
        <member name="M:Impinj.OctaneSdk.SpeedwayReader.ApplyFactorySettings">
            <summary>
            Change the settings of the reader to factory settings.
            </summary>
            <remarks>
            The settings on the reader are first cleared the
            same way <see cref="M:Impinj.OctaneSdk.SpeedwayReader.ClearSettings"/> does.
            Then the factory settings, the same settings
            returned by <see cref="M:Impinj.OctaneSdk.SpeedwayReader.QueryFactorySettings"/>,
            are put on the reader.
            <para>
            Events and reports are delivered after a successful
            ApplyFactorySettings.
            </para>
            </remarks>
            <exception cref="T:Impinj.OctaneSdk.OctaneSdkException">
            Thrown when there is no connection or when the
            reader replies with an error.</exception>
        </member>
        <member name="M:Impinj.OctaneSdk.SpeedwayReader.ResumeEventsAndReports">
            <summary>
            Allow events and reports to be delivered to the application.
            </summary>
            <remarks>
            After connecting to a reader that is already set up an
            application may need to prepare for events and reports
            before they are delivered.
            Therefor events and reports are held until ResumeEventsAndReports
            is called. Once the application is ready it calls
            ResumeEventsAndReports and anything held is delivered.
            Note that the timestamps of the previously held events
            and reports may be in the past.
            </remarks>
            <exception cref="T:Impinj.OctaneSdk.OctaneSdkException">
            Thrown when there is no connection or when the
            reader replies with an error.</exception>
        </member>
        <member name="M:Impinj.OctaneSdk.SpeedwayReader.QueryTagReport">
            <summary>
            Query the reader for the content of its report accumulator.
            </summary>
            <remarks>
            Using this interface only makes sense if ReportMode.WaitForQuery
            is being used.
            </remarks>
            <returns>A possibly empty tag report.</returns>
            <exception cref="T:Impinj.OctaneSdk.OctaneSdkException">
            Thrown when there is no connection or when the
            reader replies with an error.</exception>
        </member>
        <member name="M:Impinj.OctaneSdk.SpeedwayReader.QueryTags(System.Int32)">
            <summary>
            Start the reader, singulate for a time, stop, and
            report the tags read during that interval.
            </summary>
            <remarks>
            The settings on the reader are temporarily changed while
            this procedure is done. Because of this it is possible
            for automatic start and stop triggers to be missed.
            </remarks>
            <param name="seconds">The number of seconds to singulate</param>
            <returns>A possibly empty tag report.</returns>
            <exception cref="T:Impinj.OctaneSdk.OctaneSdkException">
            Thrown when there is no connection or when the
            reader replies with an error.</exception>
        </member>
        <member name="M:Impinj.OctaneSdk.SpeedwayReader.QueryTags(System.Double)">
            <summary>
            Start the reader, singulate for a time, stop, and
            report the tags read during that interval.
            </summary>
            <remarks>
            The settings on the reader are temporarily changed while
            this procedure is done. Because of this it is possible
            for automatic start and stop triggers to be missed.
            </remarks>
            <param name="seconds">The number of seconds to singulate.
            Fractions of seconds are allowed (example 7.500)</param>
            <returns>A possibly empty tag report.</returns>
            <exception cref="T:Impinj.OctaneSdk.OctaneSdkException">
            Thrown when there is no connection or when the
            reader replies with an error.</exception>
        </member>
        <member name="M:Impinj.OctaneSdk.SpeedwayReader.SetGpo(System.Int32,System.Boolean)">
            <summary>
            Set a General Purpose Output level
            </summary>
            <param name="gpoPortNumber">The GPO port number
            starting with 1.</param>
            <param name="level">true for high, false for low</param>
            <exception cref="T:Impinj.OctaneSdk.OctaneSdkException">
            Thrown when there is no connection, when the port
            number is invalid, or when the
            reader replies with an error.</exception>
        </member>
        <member name="M:Impinj.OctaneSdk.SpeedwayReader.Start">
            <summary>
            Start the reader singulating for tags.
            </summary>
            <remarks>
            It is OK to explictly start the reader with
            this interface even if the reader has automatic
            start triggers set.
            </remarks>
            <exception cref="T:Impinj.OctaneSdk.OctaneSdkException">
            Thrown when there is no connection, when the
            reader is not set up, or when the
            reader replies with an error.</exception>
        </member>
        <member name="M:Impinj.OctaneSdk.SpeedwayReader.Stop">
            <summary>
            Stop the reader singulating.
            </summary>
            <remarks>
            It is OK to explictly stop the reader with
            this interface even if the reader has automatic
            stop triggers set.
            It is OK to use this interface if the reader
            is already stopped.
            </remarks>
            <exception cref="T:Impinj.OctaneSdk.OctaneSdkException">
            Thrown when there is no connection or when the
            reader replies with an error.</exception>
        </member>
        <member name="M:Impinj.OctaneSdk.SpeedwayReader.OnLogging(Impinj.OctaneSdk.LoggingEventArgs)">
            <summary>Deliver a log message. </summary>
            <param name="args">event arguments</param>
            <remarks>The base class discards the message. </remarks>
        </member>
        <member name="M:Impinj.OctaneSdk.SpeedwayReader.OnConnectionChanged(Impinj.OctaneSdk.ConnectionChangedEventArgs)">
            <summary>
            The status of the network connection to the reader
            changed.
            </summary>
            <param name="args">event arguments</param>
            <remarks> The base class demultiplexes to
            OnConnected, OnDisconnected, or OnConnectionLost.
            </remarks>
        </member>
        <member name="M:Impinj.OctaneSdk.SpeedwayReader.OnConnected(Impinj.OctaneSdk.ConnectionChangedEventArgs)">
            <summary>The network connection to the reader was just
            established. </summary>
            <param name="args">event arguments</param>
        </member>
        <member name="M:Impinj.OctaneSdk.SpeedwayReader.OnDisconnected(Impinj.OctaneSdk.ConnectionChangedEventArgs)">
            <summary>The network connection was just disconnected upon
            request.</summary>
            <param name="args">event arguments</param>
        </member>
        <member name="M:Impinj.OctaneSdk.SpeedwayReader.OnConnectionLost(Impinj.OctaneSdk.ConnectionChangedEventArgs)">
            <summary> The network connection unexpectedly dropped. The
            situation must be cleaned up by calling Disconnect.</summary>
            <param name="args">event arguments</param>
        </member>
        <member name="M:Impinj.OctaneSdk.SpeedwayReader.OnConnectionAttempted(Impinj.OctaneSdk.ConnectionAttemptedEventArgs)">
            <summary>Another application tried to connect to the reader.</summary>
            <param name="args">event arguments</param>
        </member>
        <member name="M:Impinj.OctaneSdk.SpeedwayReader.OnAntennaChanged(Impinj.OctaneSdk.AntennaChangedEventArgs)">
            <summary>An antenna was just connected or disconnected.</summary>
            <param name="args">event arguments</param>
        </member>
        <member name="M:Impinj.OctaneSdk.SpeedwayReader.OnGpiChanged(Impinj.OctaneSdk.GpiChangedEventArgs)">
            <summary>An enabled general purpose input (GPI) just changed.
            </summary>
            <param name="args">event arguments</param>
            <remarks>
            The base class demultiplexes to OnGpi1Changed,
            OnGpi2Changed, OnGpi3Changed, or
            OnGpi4Changed. </remarks>
        </member>
        <member name="M:Impinj.OctaneSdk.SpeedwayReader.OnGpi1Changed(Impinj.OctaneSdk.GpiChangedEventArgs)">
            <summary>GPI 1 just changed.</summary>
            <param name="args">event arguments</param>
        </member>
        <member name="M:Impinj.OctaneSdk.SpeedwayReader.OnGpi2Changed(Impinj.OctaneSdk.GpiChangedEventArgs)">
            <summary>GPI 2 just changed.</summary>
            <param name="args">event arguments</param>
        </member>
        <member name="M:Impinj.OctaneSdk.SpeedwayReader.OnGpi3Changed(Impinj.OctaneSdk.GpiChangedEventArgs)">
            <summary>GPI 3 just changed.</summary>
            <param name="args">event arguments</param>
        </member>
        <member name="M:Impinj.OctaneSdk.SpeedwayReader.OnGpi4Changed(Impinj.OctaneSdk.GpiChangedEventArgs)">
            <summary>GPI 4 just changed.</summary>
            <param name="args">event arguments</param>
        </member>
        <member name="M:Impinj.OctaneSdk.SpeedwayReader.OnReportBufferOverflowed(Impinj.OctaneSdk.ReportBufferOverflowedEventArgs)">
            <summary>The report buffer on the reader could not hold any
            more tag reports.
            </summary>
            <param name="args">event arguments</param>
            <remarks>The number of tag reports that can
            be held on the reader depends on the what report
            options are enabled. Usually it is a very big number.
            Use <see cref="M:Impinj.OctaneSdk.SpeedwayReader.QueryTags(System.Int32)"/> 
            to resolve the situation. </remarks>
        </member>
        <member name="M:Impinj.OctaneSdk.SpeedwayReader.OnReportBufferWarned(Impinj.OctaneSdk.ReportBufferWarnedEventArgs)">
            <summary>
            The report buffer on the reader is nearly full.
            </summary>
            <param name="args">event arguments</param>
            <remarks>
            The application should soon do a 
            <see cref="M:Impinj.OctaneSdk.SpeedwayReader.QueryTags(System.Int32)"/> to resolve the
            situation.
            </remarks>
        </member>
        <member name="M:Impinj.OctaneSdk.SpeedwayReader.OnStarted(Impinj.OctaneSdk.StartedEventArgs)">
            <summary>The reader has started</summary>
            <param name="args">event arguments</param>
        </member>
        <member name="M:Impinj.OctaneSdk.SpeedwayReader.OnStopped(Impinj.OctaneSdk.StoppedEventArgs)">
            <summary>The reader has stopped</summary>
            <param name="args">event arguments</param>
        </member>
        <member name="M:Impinj.OctaneSdk.SpeedwayReader.OnReaderExceptionOccured(Impinj.OctaneSdk.ReaderExceptionOccuredEventArgs)">
            <summary>
            Called when a reader exception occurs on the connected device
            </summary>
            <param name="args">event arguments</param>
            <remarks>
            This is not a code exception, but a device exceptions and
            typically occurs when an unexpected failure occurs on the 
            reader device.
            </remarks>
        </member>
        <member name="M:Impinj.OctaneSdk.SpeedwayReader.OnTagsReported(Impinj.OctaneSdk.TagsReportedEventArgs)">
            <summary>
            This is the delivery of tag reports.
            </summary>
            <param name="args">event arguments</param>
            <remarks>
            This happens for
            ReportModes BatchAfterStop, Individual, and
            IndividualUnbuffered.
            </remarks>
        </member>
        <member name="P:Impinj.OctaneSdk.SpeedwayReader.LogLevel">
            <summary>
            The mount of detail the applications wants logged
            from this SpeedwayReader.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.SpeedwayReader.ReaderIdentity">
            <summary>
            Application set identity for this reader.
            </summary>
            <remarks>
            This may be set by the application to any object
            and may be used as a "back pointer" to application
            specific data.
            The default value is a hex string with the reader's
            unique identity. See <see cref="P:Impinj.OctaneSdk.Status.ReaderIdentity"/>.
            </remarks>
        </member>
        <member name="E:Impinj.OctaneSdk.SpeedwayReader.Logging">
            <summary>Deliver a log message. </summary>
        </member>
        <member name="E:Impinj.OctaneSdk.SpeedwayReader.ConnectionChanged">
            <summary>
            The status of the network connection to the reader
            changed.
            </summary>
        </member>
        <member name="E:Impinj.OctaneSdk.SpeedwayReader.Connected">
            <summary>The network connection to the reader was just
            established. </summary>
        </member>
        <member name="E:Impinj.OctaneSdk.SpeedwayReader.Disconnected">
            <summary>The network connection was just disconnected upon
            request.</summary>
        </member>
        <member name="E:Impinj.OctaneSdk.SpeedwayReader.ConnectionLost">
            <summary> The network connection unexpectedly dropped. The
            situation must be cleaned up by calling Disconnect.</summary>
        </member>
        <member name="E:Impinj.OctaneSdk.SpeedwayReader.ConnectionAttempted">
            <summary>Another application tried to connect to the reader.</summary>
        </member>
        <member name="E:Impinj.OctaneSdk.SpeedwayReader.AntennaChanged">
            <summary>An antenna was just connected or disconnected.</summary>
        </member>
        <member name="E:Impinj.OctaneSdk.SpeedwayReader.GpiChanged">
            <summary>An enabled general purpose input (GPI) just changed.
            </summary>
        </member>
        <member name="E:Impinj.OctaneSdk.SpeedwayReader.Gpi1Changed">
            <summary>GPI 1 just changed.</summary>
        </member>
        <member name="E:Impinj.OctaneSdk.SpeedwayReader.Gpi2Changed">
            <summary>GPI 2 just changed.</summary>
        </member>
        <member name="E:Impinj.OctaneSdk.SpeedwayReader.Gpi3Changed">
            <summary>GPI 3 just changed.</summary>
        </member>
        <member name="E:Impinj.OctaneSdk.SpeedwayReader.Gpi4Changed">
            <summary>GPI 4 just changed.</summary>
        </member>
        <member name="E:Impinj.OctaneSdk.SpeedwayReader.ReportBufferOverflowed">
            <summary>The report buffer on the reader could not hold any
            more tag reports.
            </summary>
            <remarks>The number of tag reports that can
            be held on the reader depends on the what report
            options are enabled. Usually it is a very big number.
            Use <see cref="M:Impinj.OctaneSdk.SpeedwayReader.QueryTags(System.Int32)"/> 
            to resolve the situation. </remarks>
        </member>
        <member name="E:Impinj.OctaneSdk.SpeedwayReader.ReportBufferWarned">
            <summary>
            The report buffer on the reader is nearly full.
            </summary>
            <remarks>
            The application should soon do a 
            <see cref="M:Impinj.OctaneSdk.SpeedwayReader.QueryTags(System.Int32)"/> to resolve the
            situation.
            </remarks>
        </member>
        <member name="E:Impinj.OctaneSdk.SpeedwayReader.Started">
            <summary>The reader has started</summary>
        </member>
        <member name="E:Impinj.OctaneSdk.SpeedwayReader.Stopped">
            <summary>The reader has stopped</summary>
        </member>
        <member name="E:Impinj.OctaneSdk.SpeedwayReader.ReaderExceptionOccured">
            <summary>
            Called when a reader exception occurs on the connected device
            </summary>
            <remarks>
            This is not a code exception, but a device exceptions and
            typically occurs when an unexpected failure occurs on the 
            reader device.
            </remarks>
        </member>
        <member name="E:Impinj.OctaneSdk.SpeedwayReader.TagsReported">
            <summary>
            This is the delivery of tag reports.
            </summary>
            <remarks>
            This happens for
            ReportModes BatchAfterStop, Individual, and
            IndividualUnbuffered.
            </remarks>
        </member>
        <member name="T:Impinj.OctaneSdk.SearchMode">
            <summary>
            Control how the reader selects tags.
            </summary>
            <remarks>
            The search mode controls whether the reader tries
            to singulate tags repeatedly or just once.
            On a per-session basis each tag has an A/B state.
            Sessions have different persistance of the A/B state
            ranging from a fraction of a second to tens of seconds.
            Sometimes applications need to singulate each tag just
            once, and sometimes applications need to repeatedly
            singulate tags.
            </remarks>
            <seealso cref="P:Impinj.OctaneSdk.Settings.SearchMode"/>
        </member>
        <member name="F:Impinj.OctaneSdk.SearchMode.ReaderSelected">
            <summary>
            The reader selects the search mode
            based on the session.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.SearchMode.DualTarget">
            <summary>
            The reader selects tags in the A state and
            moves them to the B state.
            Once there are no more tags found in the A
            state the reader selects tags in the B state
            and moves them to the A state.
            Once there are no more tags found in the B
            state, the reader starts over selecting tags
            in the A state.
            Use this search mode when the application needs
            accurate information about when tags both
            enter and leave the field of view.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.SearchMode.SingleTarget">
            <summary>
            The reader selects tags in the A state and
            moves them to the B state.
            It never selects tags in the B state, though
            due to session persistance a tag might "fall back"
            to the A state.
            Use this search mode when a great many tags
            will continuosly pass through the field of view.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.SearchMode.SingleTargetWithSuppression">
            <summary>
            The reader selects tags in the A state and
            moves them to the B state.
            It never selects tags in the B state, though
            due to session persistance a tag might "fall back"
            to the A state.
            This search mode mitigates how many tags "fall back".
            Use this search mode when a great many tags
            will continuosly and quickly pass through
            the field of view.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.Internals.LtkProxy.AddRawMessageHandler(System.Type,System.EventHandler{Impinj.OctaneSdk.Internals.RawMessageHandler})">
            <summary>
            Adds a raw message handler to be handled by the callback thread.
            </summary>
            <param name="type">The class type to be handled</param>
            <param name="rawHandler">The EventHandler to be called back</param>
        </member>
        <member name="T:Impinj.OctaneSdk.QtDataProfile">
            <summary>
            Defines the data profile for Impinj silicon implementing the QT
            features set
            </summary>
            <remarks>QT allows the tag to have a dual memory layout.
            These two layouts are called public and private. </remarks>
        </member>
        <member name="F:Impinj.OctaneSdk.QtDataProfile.Unknown">
            <summary>
            The tag QT data profile is not known
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.QtDataProfile.Private">
            <summary>
            The tag QT data profile is private.  See the Impinj QT
            documentation for tag memory layout in the private profile
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.QtDataProfile.Public">
            <summary>
            The tag QT data profile is public.  See the Impinj QT
            documentation for tag memory layout in the public profile
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ProgramUserMemoryResult">
            <summary>
            Class that contains the result of 
            <see cref="M:Impinj.OctaneSdk.SpeedwayReader.ProgramUserMemory(Impinj.OctaneSdk.ProgramUserMemoryParams)"/>
            operation
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ProgramUserMemoryResult.#ctor">
            <summary>
            Initializes a new instance of the ProgramUserMemoryResult class 
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ProgramUserMemoryResult.#ctor(Impinj.OctaneSdk.CommonAccessResult)">
            <summary>
            Initializes a new instance of the ProgramUserMemoryResult class 
            from a commonAccessResult instance
            </summary>
            <param name="commonAccessResult">initializer</param>
        </member>
        <member name="M:Impinj.OctaneSdk.ProgramUserMemoryResult.#ctor(Impinj.OctaneSdk.ProgramUserMemoryResult)">
            <summary>
            Initializes a new instance of the ProgramUserMemoryResult class 
            (copy constructor)
            </summary>
            <param name="programUserMemoryResult">instance to copy</param>
        </member>
        <member name="P:Impinj.OctaneSdk.ProgramUserMemoryResult.WriteResult">
            <summary>
            The result status of the user memory programming
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ProgramUserMemoryResult.ReadResult">
            <summary>
            The result status of optional verify
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ProgramUserMemoryResult.LockResult">
            <summary>
            The result status of optional user memory lock operation
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.PrimitiveWriteParams">
            <summary>
            The low level access primitive for writing 
            data to a tag
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.PrimitiveWriteParams.#ctor">
            <summary>
            Construct a PrimitiveWriteParams instance
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.PrimitiveWriteParams.#ctor(Impinj.OctaneSdk.PrimitiveWriteParams)">
            <summary>
            Construct a PrimitiveWriteParams instance
            (copy constructor)
            </summary>
            <param name="primitiveWriteParams">instance to copy</param>
        </member>
        <member name="M:Impinj.OctaneSdk.PrimitiveWriteParams.Clone">
            <summary>
            Duplicate the instance
            </summary>
            <returns>PrimitiveWriteParams</returns>
        </member>
        <member name="P:Impinj.OctaneSdk.PrimitiveWriteParams.MemoryBank">
            <summary>
            The memory bank to write
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.PrimitiveWriteParams.WordPointer">
            <summary>
            The offset of the first word in the memory bank to start the write
            </summary>
            <remarks>Must be greater than zero</remarks>
        </member>
        <member name="P:Impinj.OctaneSdk.PrimitiveWriteParams.WriteData">
            <summary>
            The write data as a hex string
            </summary>
            <remarks>The hex string mst be a multiple of 4 hex characters
            (16 bits). </remarks>
        </member>
        <member name="P:Impinj.OctaneSdk.PrimitiveWriteParams.IsBlockWriteUsed">
            <summary>
            Use block write to write the data (rather than single word write)
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.PrimitiveWriteParams.BlockWriteWordCount">
            <summary>
            If using block write, use a block size specified here
            </summary>
            <remarks>Currently supported values are 1 and 2 words</remarks>
        </member>
        <member name="T:Impinj.OctaneSdk.AutoStopSettings">
            <summary>
            This class contains the settings that allow the reader to
            operate autonomously. It is used in association with the
            AutoStartSettings class.
            </summary>
            <remarks>
            The reader can be configured to stop singulating
            automatically based on certain input parameters, such as a
            general purpose input (GPI) transitioning or a timer
            expiring. This class contains those settings.
            </remarks>
        </member>
        <member name="M:Impinj.OctaneSdk.AutoStopSettings.#ctor">
            <summary>
            Initializes a new instance of the AutoStopSettings class.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.AutoStopSettings.#ctor(Impinj.OctaneSdk.AutoStopSettings)">
            <summary>
            Initializes a new instance of the AutoStopSettings class
            (copy constructor).
            </summary>
            <param name="autoStopSettings">
            The object instance to copy.
            </param>
        </member>
        <member name="P:Impinj.OctaneSdk.AutoStopSettings.Mode">
            <summary>
            The auto-stop mode. This setting dictates whether the
            reader will stop singulating automatically or not. The
            remaining properties contained within this class are
            processed or ignored based on this value.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.AutoStopSettings.GpiPortNumber">
            <summary>
            The GPI on which to stop singulating. GPI ports are
            numbered from 1-4 and may vary by reader model. This value
            is only used when Mode is set to GpiTrigger.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.AutoStopSettings.GpiLevel">
            <summary>
            The level of the GPI on which the reader will stop
            singulating. A value of true means that the reader will
            auto-stop when the GPI transitions high. A value of false
            means that the reader will auto-stop when the the GPI
            transitions low. This value is only used when Mode is set
            to GpiTrigger.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.AutoStopSettings.DurationInMs">
            <summary>
            The duration after which the reader will stop singulating.
            This value can be used as either a guard timer against a
            GPI state change, or an absolute timer duration. This
            duration is specified in milliseconds. This value is only
            used when Mode is set to either GpiTrigger or Duration.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.RxSensitivityEntry">
            <summary>
            Describes a single receive sensitivity that is available on the reader.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.RxSensitivityEntry.LlrpCode">
            <summary>
            The LLRP code used to select the reader mode.
            Applications should not need this.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.RxSensitivityEntry.Dbm">
            <summary>
            The receive sensitivity in dBm (decibel milliwatts)
            as used in <see cref="T:Impinj.OctaneSdk.AntennaSettings"/>.
            Typically between -80 and -30 dBm.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ReaderModeEntry">
            <summary>
            Describes a single reader mode that is available on the reader.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ReaderModeEntry.#ctor">
            <summary>
            Initializes a new instance of the ReaderModeEntry class.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ReaderModeEntry.LlrpCode">
            <summary>
            The LLRP code used to select the reader mode.
            Applications should not need this.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ReaderModeEntry.Mode">
            <summary>
            The reader mode as used in <see cref="T:Impinj.OctaneSdk.Settings"/>.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ReaderModeEntry.Description">
            <summary>
            The preferred description for the mode, provided
            for use in GUI dialogs, reports, and other
            human readable forms.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.Constants">
            <summary>
            Constants used by the OctaneSdk to set limits to external or
            internal values.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.Constants.Version">
            <summary> 
            The version of the OctaneSDK library as a C-String 
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.Constants.MinAntennaPortNumber">
            <summary> 
            the minimum antenna number supported by the OctaneSDK library 
            </summary>
            <remarks>
            See the SpeedwayReader 
            <see cref="M:Impinj.OctaneSdk.SpeedwayReader.QueryFeatureSet"/> method
            to obtain the actual number of antenna ports supported by the reader
            </remarks>        
        </member>
        <member name="F:Impinj.OctaneSdk.Constants.MaxAntennaPortNumber">
            <summary> 
            the maximum antenna number supported by the OctaneSDK library 
            </summary>
            <remarks>
             See
             the SpeedwayReader 
             <see cref="M:Impinj.OctaneSdk.SpeedwayReader.QueryFeatureSet"/> method
            to obtain the actual number of antenna ports supported by the reader
            </remarks>
        </member>
        <member name="F:Impinj.OctaneSdk.Constants.MinGpiPortNumber">
            <summary> 
            the minimum GPI port number supported by the OctaneSDK library 
            </summary>
            <remarks>
            See the SpeedwayReader 
            <see cref="M:Impinj.OctaneSdk.SpeedwayReader.QueryFeatureSet"/> method
            to obtain the actual number of GPI ports supported by the reader 
            </remarks>
        </member>
        <member name="F:Impinj.OctaneSdk.Constants.MaxGpiPortNumber">
            <summary> 
            the maximum GPI port number supported by the OctaneSDK library 
            </summary>
            <remarks>
            See the SpeedwayReader 
            <see cref="M:Impinj.OctaneSdk.SpeedwayReader.QueryFeatureSet"/> method
            to obtain the actual number of GPI ports supported by the reader 
            </remarks>
        </member>
        <member name="F:Impinj.OctaneSdk.Constants.DefaultGpiDebounceInMs">
            <summary> 
            The default debounce time for GPI ports on the reader.
            This is only the default.  The value can be adjusted using
            the <see cref="T:Impinj.OctaneSdk.GpiSettings"/> class. 
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.Constants.MinGpoPortNumber">
            <summary> 
            the minimum GPO port number supported by the OctaneSDK library 
            </summary>
            <remarks>
            See the SpeedwayReader 
            <see cref="M:Impinj.OctaneSdk.SpeedwayReader.QueryFeatureSet"/> method
            to obtain the actual number of GPO ports supported by the reader 
            </remarks>
        </member>
        <member name="F:Impinj.OctaneSdk.Constants.MaxGpoPortNumber">
            <summary> 
            the minimum GPO port number supported by the OctaneSDK library. 
            </summary>
            <remarks>
            See the SpeedwayReader 
            <see cref="M:Impinj.OctaneSdk.SpeedwayReader.QueryFeatureSet"/> method
            to obtain the actual number of GPO ports supported by the reader
            </remarks>
        </member>
        <member name="F:Impinj.OctaneSdk.Constants.ROSpecID">
            <summary> 
            The ROSpecID of the underlying LLRP ROSpec used by OctaneSDK
            </summary>
            <remarks>
            This constant me be useful for debugging purposes.  With this
            ID, you can examine the detailed LLRP ROSpec on the reader 
            </remarks>
        </member>
        <member name="F:Impinj.OctaneSdk.Constants.AccessSpecID">
            <summary> 
            The AccessSpecID of the underlying LLRP AcecssSpec used by OctaneSDK
            </summary>
            <remarks>
            This constant me be useful for debugging purposes.  With this
            ID, you can examine the detailed LLRP AccessSpec on the reader 
            </remarks>
        </member>
        <member name="F:Impinj.OctaneSdk.Constants.MaxRetryCount">
            <summary> 
            The maximum allowable retryCount for the 
            <see cref="T:Impinj.OctaneSdk.CommonAccessParams"/> class
            RetryCount property 
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.Constants.MinTimeoutInMs">
            <summary> 
            The minimum allowable timeout for the 
            <see cref="T:Impinj.OctaneSdk.CommonAccessParams"/> class
            TimeoutInMs property 
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.Constants.MaxTimeoutInMs">
            <summary> 
            The maximum allowable timeout for the 
            <see cref="T:Impinj.OctaneSdk.CommonAccessParams"/> class
            TimeoutInMs property 
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.Constants.MaxReadWordCount">
            <summary> 
            The maximum allowable WordCount in the 
            <see cref="T:Impinj.OctaneSdk.ReadTidMemoryParams"/> and
            <see cref="T:Impinj.OctaneSdk.ReadUserMemoryParams"/> classes WordCount property
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.Constants.MaxWriteWordCount">
            <summary> 
            The maximum allowable WordCount in the 
            <see cref="T:Impinj.OctaneSdk.ReadTidMemoryParams"/> and
            <see cref="T:Impinj.OctaneSdk.ReadUserMemoryParams"/> classes WordCount property
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.Constants.MaxEpcWordCount">
            <summary> 
            maximum size of EPC handled by library in 16-bit words. 
            e.g. 31 words is 31*16 = 496 bits 
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.Constants.MaxBlockPermalockWordCount">
            <summary> 
            The maximum allowable WordCount in the 
            <see cref="T:Impinj.OctaneSdk.PrimitiveGetBlockPermalockParams"/> class 
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.TagFilterOp">
            <summary>
            Individual tag filters define a particular memory pattern
            within a tag's memory. When a tag with that particular memory
            pattern is seen, whether that tag is reported by the reader is
            determined by this enumeration.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TagFilterOp.None">
            <summary>
            This is an invalid value and is used to identify
            uninitialized object properties of this type.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TagFilterOp.Match">
            <summary>
            When a tag is seen with memory content matching the
            information found in the filter, the tag should be
            reported by the reader.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TagFilterOp.NotMatch">
            <summary>
            When a tag is seen with memory content not matching the
            information found in the filter, the tag should be
            reported by the reader.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ProgramAccessPasswordParams">
            <summary>
            Class to carry the configuration for a
            <see cref="M:Impinj.OctaneSdk.SpeedwayReader.ProgramAccessPassword(Impinj.OctaneSdk.ProgramAccessPasswordParams)"/> operation
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ProgramAccessPasswordParams.#ctor">
            <summary>
            Initializes a new instance of the ProgramAccessPasswordParams class 
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ProgramAccessPasswordParams.#ctor(Impinj.OctaneSdk.CommonAccessParams)">
            <summary>
            Initializes a new instance of the ProgramAccessPasswordParams class
            from a commonAccessParams instance
            </summary>
            <param name="commonAccessParams">initializer</param>
        </member>
        <member name="M:Impinj.OctaneSdk.ProgramAccessPasswordParams.#ctor(Impinj.OctaneSdk.ProgramAccessPasswordParams)">
            <summary>
            Initializes a new instance of the ProgramAccessPasswordParams class 
            (copy constructor)
            </summary>
            <param name="programAccessPasswordParams">instance to copy</param>
        </member>
        <member name="P:Impinj.OctaneSdk.ProgramAccessPasswordParams.NewAccessPassword">
            <summary>
            The new access password (change to) for the tag.
            </summary>
            <remarks>
            In C1G2, settings the password string to 00000000
            will turn off protected accesss and let all users
            access the tag
            </remarks>
        </member>
        <member name="P:Impinj.OctaneSdk.ProgramAccessPasswordParams.IsWriteVerified">
            <summary>
            Verify the write operation with a read
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ProgramAccessPasswordParams.IsBlockWriteUsed">
            <summary>
            Use block write to write the new password value
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ProgramAccessPasswordParams.BlockWriteWordCount">
            <summary>
            If block write is used above, specifies the size of the
            block
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ProgramAccessPasswordParams.LockType">
            <summary>
            sets theh lock status for the access password
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.PrimitiveKillResult">
            <summary>
            The low level access primitive for conveying the kill primitive
            results.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.PrimitiveKillResult.#ctor">
            <summary>
            Construct a PrimitiveKillResult instance
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.PrimitiveKillResult.#ctor(Impinj.OctaneSdk.PrimitiveKillResult)">
            <summary>
            Construct a PrimitiveKillResult instance
            (copy constructor)
            </summary>
            <param name="primitiveKillResult">instance to copy</param>
        </member>
        <member name="M:Impinj.OctaneSdk.PrimitiveKillResult.Clone">
            <summary>
            Duplicate the instance
            </summary>
            <returns>PrimitiveKillResult</returns>
        </member>
        <member name="P:Impinj.OctaneSdk.PrimitiveKillResult.Result">
            <summary>
            The access result of the kill primitive operation
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.PrimitiveGetQtConfigResult">
            <summary>
            The low level access primitive for conveying the GetQtConfigResults
            results.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.PrimitiveGetQtConfigResult.#ctor">
            <summary>
            Construct a PrimitiveGetQtConfigResult instance
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.PrimitiveGetQtConfigResult.#ctor(Impinj.OctaneSdk.PrimitiveGetQtConfigResult)">
            <summary>
            Construct a PrimitiveGetQtConfigResult instance
            (copy constructor)
            </summary>
            <param name="primitiveGetQtConfigResult">instance to copy</param>
        </member>
        <member name="M:Impinj.OctaneSdk.PrimitiveGetQtConfigResult.Clone">
            <summary>
            Duplicate the instance
            </summary>
            <returns>PrimitiveGetQtConfigResult</returns>
        </member>
        <member name="P:Impinj.OctaneSdk.PrimitiveGetQtConfigResult.Result">
            <summary>
            The access result of the get QT config primitive operation
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.PrimitiveGetQtConfigResult.DataProfile">
            <summary>
            The current data profile of the tag
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.PrimitiveGetQtConfigResult.AccessRange">
            <summary>
            The current access range setting of the tag
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.PrimitiveGetQtConfigResult.Persistence">
            <summary>
            The current persistence setting.  
            </summary>
            <remarks>When gettings results, persistence may be
            returned as QtPersistence.None</remarks>
        </member>
        <member name="T:Impinj.OctaneSdk.Tag">
            <summary>
            This class contains information for tag reads from a single EPC
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.Tag.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.Tag.#ctor(Impinj.OctaneSdk.Tag)">
            <summary>
            Copy constructor
            </summary>
            <param name="tag">instance to copy</param>
        </member>
        <member name="M:Impinj.OctaneSdk.Tag.ToString">
            <summary>
            Converts a Tag object to a human readable string value
            </summary>
            <returns>a string representation of the tag data</returns>
        </member>
        <member name="P:Impinj.OctaneSdk.Tag.Rank">
            <summary>
            The order (index) of the tag within the report list
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Tag.ReaderIdentity">
            <summary>
            The reader identity. See
            <see cref="P:Impinj.OctaneSdk.SpeedwayReader.ReaderIdentity"/>
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Tag.ReaderIdentityAsString">
            <summary>
            The reader identity represented as a string value.
            see <see cref="P:Impinj.OctaneSdk.Tag.ReaderIdentity"/>
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Tag.Epc">
            <summary>
            The EPC value backscattered by the tag
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Tag.IsAntennaPortNumberPresent">
            <summary>
            Value denoting whether an antenna port number is present in 
            this instance
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Tag.AntennaPortNumber">
            <summary>
            The antenna port number if <see cref="P:Impinj.OctaneSdk.Tag.IsAntennaPortNumberPresent"/>
            is true.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Tag.IsPeakRssiInDbmPresent">
            <summary>
            Value denoting whether an peak rssi is present in the instance
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Tag.PeakRssiInDbm">
            <summary>
            The largest RSSI (least negative) value represented by the 
            tag reads conveyed in this report if 
            <see cref="P:Impinj.OctaneSdk.Tag.IsPeakRssiInDbmPresent"/> is true
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Tag.IsSeenCountPresent">
            <summary>
            Value denoting whether the <see cref="P:Impinj.OctaneSdk.Tag.SeenCount"/>
            attribute is valid.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Tag.SeenCount">
            <summary>
            The number of tag reads of this EPC conveyed in this
            tag report if <see cref="P:Impinj.OctaneSdk.Tag.IsSeenCountPresent"/> is true
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Tag.IsSerializedTidPresent">
            <summary>
             Value denoting whether the <see cref="P:Impinj.OctaneSdk.Tag.SerializedTid"/>
             attribute is valid.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Tag.SerializedTid">
            <summary>
            The serialized TID for the EPC conveyed in this instance if
            <see cref="P:Impinj.OctaneSdk.Tag.IsSerializedTidPresent"/> is true
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Tag.IsFirstSeenTimePresent">
            <summary>
            Value denotes whether <see cref="P:Impinj.OctaneSdk.Tag.FirstSeenTime"/>
            attribute is valid
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Tag.FirstSeenTime">
            <summary>
            The time of the first tag read for the EPC conveyed in 
            this instance if <see cref="P:Impinj.OctaneSdk.Tag.IsFirstSeenTimePresent"/> is true
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Tag.IsLastSeenTimePresent">
            <summary>
            Value denotes whether <see cref="P:Impinj.OctaneSdk.Tag.LastSeenTime"/>
            attribute is valid
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Tag.LastSeenTime">
            <summary>
            The time of the last tag read for the EPC conveyed in 
            this instance if <see cref="P:Impinj.OctaneSdk.Tag.IsLastSeenTimePresent"/> is true
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Tag.IsChannelInMhzPresent">
            <summary>
            Value denotes whether <see cref="P:Impinj.OctaneSdk.Tag.ChannelInMhz"/>
            attribute is valid
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Tag.ChannelInMhz">
            <summary>
            The channel of the tag read for the EPC conveyed in this instance
            if <see cref="P:Impinj.OctaneSdk.Tag.IsChannelInMhzPresent"/>
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Tag.IsPhaseAngleInRadiansPresent">
            <summary>
            Value denotes whether <see cref="P:Impinj.OctaneSdk.Tag.PhaseAngleInRadians"/>
            attribute is valild
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Tag.PhaseAngleInRadians">
            <summary>
            The RF phase angle 
            in radians (relative to the transmit carrier) 
            the tag read for the EPC conveyed in this instance if
            <see cref="P:Impinj.OctaneSdk.Tag.IsPhaseAngleInRadiansPresent"/>
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ListOfAntennaSettings">
            <summary>
            This class contains a variable-length array of
            <see cref="T:Impinj.OctaneSdk.AntennaSettings"/> objects. Different reader
            products support different numbers of antennas and this class
            encapsulates that varying number.
            </summary>
            <seealso cref="T:Impinj.OctaneSdk.AntennaSettings"/>
        </member>
        <member name="F:Impinj.OctaneSdk.ListOfAntennaSettings.Elements">
            <summary>
            A variable-length array of <see cref="T:Impinj.OctaneSdk.AntennaSettings"/>
            objects.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ListOfAntennaSettings.#ctor">
            <summary>
            Initializes a new instance of the ListOfAntennaSettings
            class.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ListOfAntennaSettings.#ctor(Impinj.OctaneSdk.ListOfAntennaSettings)">
            <summary>
            Initializes a new instance of the ListOfAntennaSettings
            class (copy constructor).
            </summary>
            <param name="listOfAntennaSettings">
            The object instance to copy.
            </param>
        </member>
        <member name="M:Impinj.OctaneSdk.ListOfAntennaSettings.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Implements the GetEnumerator method of the IEnumerator
            interface.
            </summary>
            <returns>
            IEnumerator
            </returns>
        </member>
        <member name="M:Impinj.OctaneSdk.ListOfAntennaSettings.GetEnumerator">
            <summary>
            Accessor method for the <see cref="T:Impinj.OctaneSdk.AntennaSettings"/>
            array.
            </summary>
            <returns>
            An enumerator for the <see cref="T:Impinj.OctaneSdk.AntennaSettings"/>
            array.
            </returns>
        </member>
        <member name="M:Impinj.OctaneSdk.ListOfAntennaSettings.Add(Impinj.OctaneSdk.AntennaSettings)">
            <summary>
            Adds a new <see cref="T:Impinj.OctaneSdk.AntennaSettings"/> object to the
            Elements array. The new object is added to the array based
            on the port number found within the object.
            </summary>
            <param name="antennaSettings">
            The <see cref="T:Impinj.OctaneSdk.AntennaSettings"/> object to add.
            </param>
        </member>
        <member name="P:Impinj.OctaneSdk.ListOfAntennaSettings.Item(System.Int32)">
            <summary>
            Overload of the [] operator. The <see cref="T:Impinj.OctaneSdk.AntennaSettings"/>
            object of the specified antenna port is returned.
            </summary>
            <param name="antennaPortNumber">
            The 1-based antenna port number to retrieve.
            </param>
            <returns>
            The requested <see cref="T:Impinj.OctaneSdk.AntennaSettings"/> object, if
            present.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when <paramref name="antennaPortNumber"/> is invalid.
            </exception>
        </member>
        <member name="T:Impinj.OctaneSdk.ConnectException">
            <summary>
            Exception thrown when a new connection to the reader cannot be made
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.OctaneSdkException">
            <summary>
            The main exception class for the OctaneSDK
            </summary>
            <remarks>
            All OctaneSDK exceptions are derived from this class
            </remarks>
        </member>
        <member name="M:Impinj.OctaneSdk.OctaneSdkException.#ctor(System.String)">
            <summary>
            Construct an new OctaneSdkException
            </summary>
            <param name="message">string message to send with exception</param>
        </member>
        <member name="M:Impinj.OctaneSdk.ConnectException.#ctor(System.String,Impinj.OctaneSdk.ApplicationConnectionState)">
            <summary>
            Construct a new ConnectionException
            </summary>
            <param name="message">a string message describing the exception</param>
            <param name="state">the current application state after the exception</param>
        </member>
        <member name="P:Impinj.OctaneSdk.ConnectException.State">
            <summary>
            The application state carried with the exception
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.StatusRefresh">
            <summary>
            Advise <see cref="M:Impinj.OctaneSdk.SpeedwayReader.QueryStatus(Impinj.OctaneSdk.StatusRefresh)"/> 
            what should be retrieved from the reader.
            </summary>
            <remarks>
            A StatusRefresh value is passed to SpeedwayReader.QueryStatus.
            Status is normally maintained internally and updated
            based on event notifications from the reader.
            Sometimes the application needs to make
            sure the status is refreshed from the actual reader.
            When QueryStatus must interact with the reader it takes
            longer (runs slower), especially when checking antenna status.
            </remarks>
        </member>
        <member name="F:Impinj.OctaneSdk.StatusRefresh.None">
            <summary>
            Return internally maintained status,
            do not check the reader.
            This is fastest.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.StatusRefresh.Everything">
            <summary>
            Refresh all status information from the reader.
            This causes several transactions with the reader.
            This level of refresh takes longer than all others.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.StatusRefresh.JustAntennas">
            <summary>
            Refresh just the antenna status from the reader.
            This can take a substantial fraction of a second
            because the reader must apply power to each antenna
            port in order to test the antenna and its connection.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.StatusRefresh.JustGpis">
            <summary>
            Refresh just the General Purpose Input (GPI) status
            from the reader.
            This is necessary for GPIs that are not enabled and,
            therefor, the reader does not send notifications
            when the input changes.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.QtPersistence">
            <summary>
            Defines the persistence of the QT information sent to  the tag.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.QtPersistence.Unknown">
            <summary>
            QT persistence is unknown.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.QtPersistence.Temporary">
            <summary>
            The QT command information is considered temporary. QT information
            will return to the last persisted settings when the
            tag loses power.
            </summary>
            <remarks>NOTE: The data store in memory is always persistent. 
            This persistence refers only to the QT configuration bits</remarks>
        </member>
        <member name="F:Impinj.OctaneSdk.QtPersistence.Permanent">
            <summary>
            The QT command information is permanent.  The tag will retain
            the QT configuration bits through power loss.
            </summary>
            <remarks>NOTE: The data store in memory is always persistent. 
            This persistence refers only to the QT configuration bits</remarks>
        </member>
        <member name="T:Impinj.OctaneSdk.ReadUserMemoryResult">
            <summary>
            Class that contains the result of 
            a <see cref="M:Impinj.OctaneSdk.SpeedwayReader.ReadUserMemory(Impinj.OctaneSdk.ReadUserMemoryParams)"/>
            operation
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ReadUserMemoryResult.#ctor">
            <summary>
            Initializes a new instance of the ReadUserMemoryResult class 
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ReadUserMemoryResult.#ctor(Impinj.OctaneSdk.CommonAccessResult)">
            <summary>
            Initializes a new instance of the ReadUserMemoryResult class 
            from a commonAccessResult instance
            </summary>
            <param name="commonAccessResult">initializer</param>
        </member>
        <member name="M:Impinj.OctaneSdk.ReadUserMemoryResult.#ctor(Impinj.OctaneSdk.ReadUserMemoryResult)">
            <summary>
            Initializes a new instance of the ReadUserMemoryResult class 
            (copy constructor)
            </summary>
            <param name="readUserMemoryResult">instance to copy</param>
        </member>
        <member name="P:Impinj.OctaneSdk.ReadUserMemoryResult.ReadResult">
            <summary>
            The result of the user memory read operation
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ProgramUserBlockResult">
            <summary>
            Class that contains the result of 
            <see cref="M:Impinj.OctaneSdk.SpeedwayReader.ProgramUserBlock(Impinj.OctaneSdk.ProgramUserBlockParams)"/>
            operation
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ProgramUserBlockResult.#ctor">
            <summary>
            Initializes a new instance of the ProgramUserBlockResult class 
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ProgramUserBlockResult.#ctor(Impinj.OctaneSdk.CommonAccessResult)">
            <summary>
            Initializes a new instance of the ProgramUserBlockResult class 
            from a commonAccessResult instance
            </summary>
            <param name="commonAccessResult">initializer</param>
        </member>
        <member name="M:Impinj.OctaneSdk.ProgramUserBlockResult.#ctor(Impinj.OctaneSdk.ProgramUserBlockResult)">
            <summary>
            Initializes a new instance of the ProgramUserBlockResult class 
            (copy constructor)
            </summary>
            <param name="programUserBlockResult">instance to copy</param>
        </member>
        <member name="P:Impinj.OctaneSdk.ProgramUserBlockResult.WriteResult">
            <summary>
            The result status of the user block programming
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ProgramUserBlockResult.ReadResult">
            <summary>
            The result status of optional verify
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ProgramUserBlockResult.LockResult">
            <summary>
            The result status of optional user lock operation
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ProgramUserBlockResult.BlockPermalockResult">
            <summary>
            The result status of optional user block lock operation.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.LogEntry">
            <summary>
            Contains the information carried in an OctaneSdk log.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.LogEntry.ReaderIdentity">
            <summary>
            See <see cref="P:Impinj.OctaneSdk.SpeedwayReader.ReaderIdentity"/>
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.LogEntry.Timestamp">
            <summary>
            The time the log information was recorded
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.LogEntry.Level">
            <summary>
            The level of severity of the log
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.LogEntry.Origin">
            <summary>
            The code component that originated the log
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.LogEntry.Message">
            <summary>
            A human readable string describing the log message
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ReportMode">
            <summary>
            Specifies when the reader sends tag reports.
            </summary>
            <remarks>
            The reader can always be queried for tags using
            <see cref="M:Impinj.OctaneSdk.SpeedwayReader.QueryTags(System.Int32)"/> 
            even while singulating.
            </remarks>
        </member>
        <member name="F:Impinj.OctaneSdk.ReportMode.WaitForQuery">
            <summary>
            Tag reports are only sent when
            <see cref="M:Impinj.OctaneSdk.SpeedwayReader.QueryTags(System.Int32)"/>
            is called.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.ReportMode.Individual">
            <summary>
            Send a tag report for each individual tag.
            Tag reports are buffered for up to 250ms
            to maintain network efficiency.
            Use this report mode when information about
            each singulation is needed.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.ReportMode.IndividualUnbuffered">
            <summary>
            Send a tag report for each individual tag.
            The tag report is transmitted over the network
            immediately.
            This report mode uses the most network bandwidth.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.ReportMode.BatchAfterStop">
            <summary>
            Send a tag report when the reader stops singulating.
            The report contains information about each tag
            singulated since the reader started.
            The report does not contain information about
            each singulation.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.RunPrimitiveSequenceResult">
            <summary>
            Class used to carry the results of a 
            <see cref="M:Impinj.OctaneSdk.SpeedwayReader.RunPrimitiveSequence(Impinj.OctaneSdk.RunPrimitiveSequenceParams)"/>
            operation
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.RunPrimitiveSequenceResult.#ctor">
            <summary>
            Initializes a new instance of the RunPrimitiveSequenceResult class 
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.RunPrimitiveSequenceResult.#ctor(Impinj.OctaneSdk.CommonAccessResult)">
            <summary>
            Initializes a new instance of the RunPrimitiveSequenceResult class 
            from a commonAccessResult instance
            </summary>
            <param name="commonAccessResult">initializer</param>
        </member>
        <member name="M:Impinj.OctaneSdk.RunPrimitiveSequenceResult.#ctor(Impinj.OctaneSdk.RunPrimitiveSequenceResult)">
            <summary>
            Initializes a new instance of the RunPrimitiveSequenceResult class 
            (copy constructor)
            </summary>
            <param name="runPrimitiveSequenceResult">instance to copy</param>
        </member>
        <member name="P:Impinj.OctaneSdk.RunPrimitiveSequenceResult.PrimitiveResult">
            <summary> The list of primitive results</summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ReadTidMemoryParams">
            <summary>
            Class to carry the configuration for a
            <see cref="M:Impinj.OctaneSdk.SpeedwayReader.ReadTidMemory(Impinj.OctaneSdk.ReadTidMemoryParams)"/> operation
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ReadTidMemoryParams.#ctor">
            <summary>
            Initializes a new instance of the ReadTidMemoryParams class
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ReadTidMemoryParams.#ctor(Impinj.OctaneSdk.CommonAccessParams)">
            <summary>
            Initializes a new instance of the ReadTidMemoryParams class
            from a commonAccessParams instance
            </summary>
            <param name="commonAccessParams">initializer</param>
        </member>
        <member name="M:Impinj.OctaneSdk.ReadTidMemoryParams.#ctor(Impinj.OctaneSdk.ReadTidMemoryParams)">
            <summary>
            Initializes a new instance of the ReadTidMemoryParams class
            (copy constructor)
            </summary>
            <param name="readTidMemoryParams">instance to copy</param>
        </member>
        <member name="P:Impinj.OctaneSdk.ReadTidMemoryParams.WordCount">
            <summary>
            The number of 16-bit TID words to read
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.PrimitiveSetQtConfigParams">
            <summary>
            The low level access primitive for setting QT configuration
             on a tag
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.PrimitiveSetQtConfigParams.#ctor">
            <summary>
            Construct a PrimitiveSetQtConfigParams instance
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.PrimitiveSetQtConfigParams.#ctor(Impinj.OctaneSdk.PrimitiveSetQtConfigParams)">
            <summary>
            Construct a PrimitiveSetQtConfigParams instance
            (copy constructor)
            </summary>
            <param name="primitiveSetQtConfigParams">instance to copy</param>
        </member>
        <member name="M:Impinj.OctaneSdk.PrimitiveSetQtConfigParams.Clone">
            <summary>
            Duplicate the instance
            </summary>
            <returns>PrimitiveSetQtConfigParams</returns>
        </member>
        <member name="P:Impinj.OctaneSdk.PrimitiveSetQtConfigParams.DataProfile">
            <summary>
            The desired data profile of the tag
            </summary>
            <remarks>A value of QtDataProfile.Unknown is not permitted</remarks>
        </member>
        <member name="P:Impinj.OctaneSdk.PrimitiveSetQtConfigParams.AccessRange">
            <summary>
            The desired access range setting of the tag
            </summary>
            <remarks>A value of QtAccessRange.Unknown is not permitted</remarks>
        </member>
        <member name="P:Impinj.OctaneSdk.PrimitiveSetQtConfigParams.Persistence">
            <summary>
            The desired persistence setting.  
            </summary>
            <remarks>A value of QtPersistence.Unknown is not permitted</remarks>
        </member>
        <member name="T:Impinj.OctaneSdk.PrimitiveSetBlockPermalockParams">
            <summary>
            The low level access primitive for setting block permalock
            status on a tag
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.PrimitiveSetBlockPermalockParams.#ctor">
            <summary>
            Construct a PrimitiveSetBlockPermalockParams instance
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.PrimitiveSetBlockPermalockParams.#ctor(Impinj.OctaneSdk.PrimitiveSetBlockPermalockParams)">
            <summary>
            Construct a PrimitiveSetBlockPermalockParams instance
            (copy constructor)
            </summary>
            <param name="primitiveSetBlockPermalockParams">instance to copy</param>
        </member>
        <member name="M:Impinj.OctaneSdk.PrimitiveSetBlockPermalockParams.Clone">
            <summary>
            Duplicate the instance
            </summary>
            <returns>PrimitiveSetBlockPermalockParams</returns>
        </member>
        <member name="P:Impinj.OctaneSdk.PrimitiveSetBlockPermalockParams.MemoryBank">
            <summary>
            The memory bank for which block permalock status change is desired
            </summary>
            <remarks>Currently this must be MemoryBank.User</remarks>
        </member>
        <member name="P:Impinj.OctaneSdk.PrimitiveSetBlockPermalockParams.BlockPointer">
            <summary>
            The pointer to the first block from which status change is desired 
            </summary>
            <remarks>Must be greater than or equal to zero</remarks>
        </member>
        <member name="P:Impinj.OctaneSdk.PrimitiveSetBlockPermalockParams.BlockMask">
            <summary>
            The block mask to lock
            </summary>
            <remarks>The block mask is a hex string representing
            the blocks to lock (ones).  The stirng must be a multiple
            of 4 hex characters (16 bits)</remarks>
        </member>
        <member name="T:Impinj.OctaneSdk.LockTagParams">
            <summary>
            Class to carry the configuration for a SpeedwayReader.LockTag
            operation
            </summary>
            <remarks>
            Constructors set all Lock variables below to LockType_None
            </remarks>
        </member>
        <member name="M:Impinj.OctaneSdk.LockTagParams.#ctor">
            <summary>
            Initializes a new instance of the LockTagParams class
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.LockTagParams.#ctor(Impinj.OctaneSdk.CommonAccessParams)">
            <summary>
            Initializes a new instance of the LockTagParams class
            from a commonAccessParams instance
            </summary>
            <param name="commonAccessParams">initializer</param>
        </member>
        <member name="M:Impinj.OctaneSdk.LockTagParams.#ctor(Impinj.OctaneSdk.LockTagParams)">
            <summary>
            Initializes a new instance of the LockTagParams class
            (copy constructor)
            </summary>
            <param name="lockTagParams">instance to copy</param>
        </member>
        <member name="P:Impinj.OctaneSdk.LockTagParams.LockAccessPassword">
            <summary>
            The LockType for the access password of the tag
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.LockTagParams.LockKillPassword">
            <summary>
            The LockType for the kill password of the tag
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.LockTagParams.LockEpcMemory">
            <summary>
            The LockType for the Epc memory region of the tag
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.LockTagParams.LockTidMemory">
            <summary>
            The LockType for the TID (Tag ID) memory region of the tag
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.LockTagParams.LockUserMemory">
            <summary>
            The LockType for the user memory region of the tag
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ListOfGpiSettings">
            <summary>
            This class contains a variable-length array of
            <see cref="T:Impinj.OctaneSdk.GpiSettings"/> objects. Different reader products
            support different numbers of general purpose inputs (GPIs)
            and this class encapsulates that varying number.
            </summary>
            <seealso cref="T:Impinj.OctaneSdk.GpiSettings"/>
        </member>
        <member name="F:Impinj.OctaneSdk.ListOfGpiSettings.Elements">
            <summary>
            A variable-length array of <see cref="T:Impinj.OctaneSdk.GpiSettings"/>
            objects.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ListOfGpiSettings.#ctor">
            <summary>
            Initializes a new instance of the ListOfGpiSettings class.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ListOfGpiSettings.#ctor(Impinj.OctaneSdk.ListOfGpiSettings)">
            <summary>
            Initializes a new instance of the ListOfGpiSettings class
            (copy constructor).
            </summary>
            <param name="listOfGpiSettings">
            The object instance to copy.
            </param>
        </member>
        <member name="M:Impinj.OctaneSdk.ListOfGpiSettings.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Implements the GetEnumerator method of the IEnumerator
            interface.
            </summary>
            <returns>
            IEnumerator
            </returns>
        </member>
        <member name="M:Impinj.OctaneSdk.ListOfGpiSettings.GetEnumerator">
            <summary>
            Accessor method for the <see cref="T:Impinj.OctaneSdk.GpiSettings"/> array.
            </summary>
            <returns>
            An enumerator for the <see cref="T:Impinj.OctaneSdk.GpiSettings"/> array.
            </returns>
        </member>
        <member name="M:Impinj.OctaneSdk.ListOfGpiSettings.Add(Impinj.OctaneSdk.GpiSettings)">
            <summary>
            Adds a new <see cref="T:Impinj.OctaneSdk.GpiSettings"/> object to the
            Elements array. The new object is added to the array based
            on the port number found within the object.
            </summary>
            <param name="gpiSettings">
            The <see cref="T:Impinj.OctaneSdk.GpiSettings"/> object to add.
            </param>
        </member>
        <member name="P:Impinj.OctaneSdk.ListOfGpiSettings.Item(System.Int32)">
            <summary>
            Overload of the [] operator. The <see cref="T:Impinj.OctaneSdk.GpiSettings"/>
            object of the specified GPI port is returned.
            </summary>
            <param name="gpiPortNumber">
            The 1-based GPI port number to retrieve.
            </param>
            <returns>
            The requested <see cref="T:Impinj.OctaneSdk.GpiSettings"/> object, if
            present.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when <paramref name="gpiPortNumber"/> is invalid.
            </exception>
        </member>
        <member name="T:Impinj.OctaneSdk.KeepAliveSettings">
            <summary>
            This class contains all the settings for monitoring the
            connection to the reader.
            </summary>
            <remarks>
            When a connection to a reader is subject to disruptions (such
            as over a multi-hop IP network) it is helpful to monitor the
            health of these connections. These settings enable the
            exchange of periodic keep-alive messages with the reader, and
            allow the connection to be torn down if a threshold number of
            messages are lost. This allows the reader to enter into its
            disconnected operational state, retaining tag information if
            so configured.
            </remarks>
        </member>
        <member name="M:Impinj.OctaneSdk.KeepAliveSettings.#ctor">
            <summary>
            Initializes a new instance of the KeepAliveSettings class.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.KeepAliveSettings.#ctor(Impinj.OctaneSdk.KeepAliveSettings)">
            <summary>
            Initializes a new instance of the KeepAliveSettings class
            (copy constructor).
            </summary>
            <param name="keepAliveSettings">
            The object instance to copy.
            </param>
        </member>
        <member name="P:Impinj.OctaneSdk.KeepAliveSettings.IsEnabled">
            <summary>
            This property determines if the keep-alive mechanism is
            enabled. When enabled, the library will monitor the state
            of the connection to the reader by configuring the reader
            to send periodic keep-alive messages.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.KeepAliveSettings.PeriodInMs">
            <summary>
            When the keep-alive mechanism is enabled, this is the
            frequency in which the reader will send the keep-alive
            messages. The duration is specified in milliseconds.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.KeepAliveSettings.LinkDownThreshold">
            <summary>
            When the keep-alive mechanism is enabled, this is the
            threshold of missed messages at which time the connection
            is declared down.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.RxSensitivityFeatures">
            <summary>
            This class contains a variable-length array of
            <see cref="T:Impinj.OctaneSdk.RxSensitivityEntry"/> objects. Different reader
            products support different sensitivities and this class
            encapsulates that varying number.
            </summary>
            <seealso cref="T:Impinj.OctaneSdk.RxSensitivityEntry"/>
        </member>
        <member name="M:Impinj.OctaneSdk.RxSensitivityFeatures.#ctor">
            <summary>
            Initializes a new instance of the
            RxSensitivityFeatures class.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.RxSensitivityFeatures.Entries">
            <summary>
            A variable-length collection of
            <see cref="T:Impinj.OctaneSdk.RxSensitivityEntry"/> objects.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.SettingsFileException">
            <summary>
            An exception thrown when the settings file is invalid or illegal
            </summary>
            <remarks>
            This exception is thrown when a illegal or invalid settings
            are found constructing a 
            <see cref="T:Impinj.OctaneSdk.Settings"/> instance and the instance
            cannot be handled.
            </remarks>
        </member>
        <member name="M:Impinj.OctaneSdk.SettingsFileException.#ctor(System.String)">
            <summary>
            Construct a new SettingsFileException
            </summary>
            <param name="message">string message to send with exception</param>
        </member>
        <member name="T:Impinj.OctaneSdk.StoppedEventArgs">
            <summary>
            The event that carries RFID stop information to the
            user application.
            </summary>
            <remarks>
            When the reader turns off its RF interface to perform and RFID
            operation
            the application is notified through the the SpeedwayReader class 
            <see cref="M:Impinj.OctaneSdk.SpeedwayReader.OnStopped(Impinj.OctaneSdk.StoppedEventArgs)"/> method
            and an instance of this class is passed by reference. 
            </remarks>
        </member>
        <member name="P:Impinj.OctaneSdk.StoppedEventArgs.ReaderIdentity">
            <summary>
            The identity of the reader reporting this event
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.StoppedEventArgs.Timestamp">
            <summary>
            The time associated with the event
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.StoppedEventArgs.State">
            <summary>
            Operational state of the reader associated with this event
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ProgramUserMemoryParams">
            <summary>
            Class to carry the configuration for a
            <see cref="M:Impinj.OctaneSdk.SpeedwayReader.ProgramUserMemory(Impinj.OctaneSdk.ProgramUserMemoryParams)"/> operation
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ProgramUserMemoryParams.#ctor">
            <summary>
            Initializes a new instance of the ProgramUserMemoryParams class
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ProgramUserMemoryParams.#ctor(Impinj.OctaneSdk.CommonAccessParams)">
            <summary>
            Initializes a new instance of the ProgramUserMemoryParams class
            from a commonAccessParams instance
            </summary>
            <param name="commonAccessParams">initializer</param>
        </member>
        <member name="M:Impinj.OctaneSdk.ProgramUserMemoryParams.#ctor(Impinj.OctaneSdk.ProgramUserMemoryParams)">
            <summary>
            Initializes a new instance of the ProgramUserMemoryParams class
            (copy constructor)
            </summary>
            <param name="programUserMemoryParams">instance to copy</param>
        </member>
        <member name="P:Impinj.OctaneSdk.ProgramUserMemoryParams.NewUserMemory">
            <summary>
            A hexidecimal string representing the data to program.
            </summary>
            <remarks>
            This string must be a multiple of 4 hexadecimal characters.
            The string cannot be longer than the Constants.MaxWriteWordCount
            words (with 4 hexadecimal characters per word).
            </remarks>
        </member>
        <member name="P:Impinj.OctaneSdk.ProgramUserMemoryParams.IsWriteVerified">
            <summary>
            Verify the user memory program operation with a read
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ProgramUserMemoryParams.IsBlockWriteUsed">
            <summary>
            Use block write to write the user memory
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ProgramUserMemoryParams.BlockWriteWordCount">
            <summary>
            If block write is used above, specifies the size of the
            block
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ProgramUserMemoryParams.LockType">
            <summary>
            sets theh lock status for the user memory after the program
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.GpoStatus">
            <summary>
            The status information for a general purpose output (GPO) port.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.GpoStatus.#ctor">
            <summary>
            Initializes a new instance of the GpoStatus class.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.GpoStatus.#ctor(Impinj.OctaneSdk.GpoStatus)">
            <summary>
            Initializes a new instance of the GpoStatus class (copy
            constructor).
            </summary>
            <param name="gpoStatus">
            The object instance to copy.
            </param>
        </member>
        <member name="P:Impinj.OctaneSdk.GpoStatus.PortNumber">
            <summary>
            The GPO port number, 1-8.
            </summary>
            <remarks>
            This is advisory so the port number is known
            when using foreach, or when passing a
            single GPO status as an argument.
            </remarks>
        </member>
        <member name="P:Impinj.OctaneSdk.GpoStatus.State">
            <summary>
            The current input level of the GPO port.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.TagsReportedEventArgs">
            <summary>
            The event that carries RFID tag information to the
            user application.
            </summary>
            <remarks>
            The reader receives tag information through RF inventory
            operation
            the application is notified through the the SpeedwayReader class 
            <see cref="M:Impinj.OctaneSdk.SpeedwayReader.OnTagsReported(Impinj.OctaneSdk.TagsReportedEventArgs)"/> method
            and an instance of this class is passed by reference. 
            </remarks>
        </member>
        <member name="P:Impinj.OctaneSdk.TagsReportedEventArgs.ReaderIdentity">
            <summary>
            The identity of the reader reporting this event
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TagsReportedEventArgs.Timestamp">
            <summary>
            The time associated with this event
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TagsReportedEventArgs.TagReport">
            <summary>
            The tag report associated with this event
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.LogOrigin">
            <summary>
            The origin of a situation that resulted in a log message.
            This gives a clue of where to investigate issues.
            </summary>
            <remarks>
            This origin is used in log messages generated
            withing the Octane SDK.
            </remarks>
        </member>
        <member name="F:Impinj.OctaneSdk.LogOrigin.Unknown">
            <summary>
            Unknown or unspecific origin.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.LogOrigin.UserInput">
            <summary>
            There is a problem with the user's input.
            Reserved to the application developer.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.LogOrigin.Application">
            <summary>
            The application generated the log message.
            Reserved to the application developer.
            This is the origin used for messaged logged
            using <see cref="M:Impinj.OctaneSdk.SpeedwayReader.Log(Impinj.OctaneSdk.LogLevel,System.String,System.Object[])"/>
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.LogOrigin.ApiInput">
            <summary>
            There is a problem with an argument from
            the application to the Octane SDK.
            Examples: something in the <see cref="T:Impinj.OctaneSdk.Settings"/>
            is incorrect or invalid port number to
            <see cref="M:Impinj.OctaneSdk.SpeedwayReader.SetGpo(System.Int32,System.Boolean)"/>.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.LogOrigin.File">
            <summary>
            A settings file had a problem.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.LogOrigin.OctaneSdkLibrary">
            <summary>
            Message concerns the Octane SDK internals.
            This is used, for example, by
            <see cref="F:Impinj.OctaneSdk.LogLevel.Verbose"/> and
            <see cref="F:Impinj.OctaneSdk.LogLevel.Trace"/> log messages.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.LogOrigin.LlrpToolKit">
            <summary>
            The situation was detected by the LLRP Tool Kit (LTK).
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.LogOrigin.Platform">
            <summary>
            Something on the platform (Windows, Linux, framework library, etc).
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.LogOrigin.Reader">
            <summary>
            Reader detected or sent a bad or unexpected message.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.LogOrigin.Other">
            <summary>
            Catch-all for origins that do not match the other origins.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.AutoStopMode">
            <summary>
            This enumeration defines the various modes in which the reader
            stops scanning for tags automatically.
            </summary>
            <remarks>
            When the reader is configured to operate autonomously (without
            application intervention), it can stop scanning for tags based
            on some outside trigger. This enumeration defines those
            various triggers.
            </remarks>
        </member>
        <member name="F:Impinj.OctaneSdk.AutoStopMode.None">
            <summary>
            Do not stop scanning for tags once a scan has started. The
            reader will only stop scanning if the application invokes
            the Stop method of the Reader class. This is the default
            behavior.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.AutoStopMode.GpiTrigger">
            <summary>
            Stop scanning when a general-purpose input (GPI) changes
            state (either a logic high or a logic low). GPIs are
            numbered 1-4 and may vary in number by reader model.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.AutoStopMode.Duration">
            <summary>
            Stop scanning after a specific duration has elapsed since
            the scan first started.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ReadAccessPasswordResult">
            <summary>
            Class that contains the result of 
            <see cref="M:Impinj.OctaneSdk.SpeedwayReader.ReadAccessPassword(Impinj.OctaneSdk.ReadAccessPasswordParams)"/>
            operation
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ReadAccessPasswordResult.#ctor">
            <summary>
            Initializes a new instance of the ReadAccessPasswordResult class 
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ReadAccessPasswordResult.#ctor(Impinj.OctaneSdk.CommonAccessResult)">
            <summary>
            Initializes a new instance of the ReadAccessPasswordResult class 
            from a commonAccessResult instance
            </summary>
            <param name="commonAccessResult">initializer</param>
        </member>
        <member name="M:Impinj.OctaneSdk.ReadAccessPasswordResult.#ctor(Impinj.OctaneSdk.ReadAccessPasswordResult)">
            <summary>
            Initializes a new instance of the ReadAccessPasswordResult class 
            (copy constructor)
            </summary>
            <param name="readAccessPasswordResult">instance to copy</param>
        </member>
        <member name="P:Impinj.OctaneSdk.ReadAccessPasswordResult.ReadResult">
            <summary>
            The result of the access password read operation
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.PrimitiveKillParams">
            <summary>
            The low level access primitive for killing a tag
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.PrimitiveKillParams.#ctor">
            <summary>
            Construct a PrimitiveKillParams instance
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.PrimitiveKillParams.#ctor(Impinj.OctaneSdk.PrimitiveKillParams)">
            <summary>
            Construct a PrimitiveKillParams instance
            (copy constructor)
            </summary>
            <param name="primitiveKillParams">instance to copy</param>
        </member>
        <member name="M:Impinj.OctaneSdk.PrimitiveKillParams.Clone">
            <summary>
            Duplicate the instance
            </summary>
            <returns>a new PrimitiveKillParams instance</returns>
        </member>
        <member name="P:Impinj.OctaneSdk.PrimitiveKillParams.KillPassword">
            <summary>
            The current kill password on the tag
            </summary>
            <remarks>The tag cannot be killed if the password is
            not known.  A tag with a zero password cannot be killed</remarks>
        </member>
        <member name="T:Impinj.OctaneSdk.PrimitiveGetQtConfigParams">
            <summary>
            The low level access primitive for getting the QT configuration
            status from a tag
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.PrimitiveGetQtConfigParams.#ctor">
            <summary>
            Construct a PrimitiveGetQtConfigParams instance
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.PrimitiveGetQtConfigParams.#ctor(Impinj.OctaneSdk.PrimitiveGetQtConfigParams)">
            <summary>
            Construct a PrimitiveGetQtConfigParams instance
            (copy constructor)
            </summary>
            <param name="primitiveGetQtConfigParams">instance to copy</param>
        </member>
        <member name="M:Impinj.OctaneSdk.PrimitiveGetQtConfigParams.Clone">
            <summary>
            Duplicate the instance
            </summary>
            <returns>PrimitiveGetQtConfigParams</returns>
        </member>
        <member name="T:Impinj.OctaneSdk.PrimitiveGetBlockPermalockResult">
            <summary>
            The low level access primitive for conveying the GetBlockPermalock
            results.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.PrimitiveGetBlockPermalockResult.#ctor">
            <summary>
            Initializes a new instance of the PrimitiveGetBlockPermalockResult class 
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.PrimitiveGetBlockPermalockResult.#ctor(Impinj.OctaneSdk.PrimitiveGetBlockPermalockResult)">
            <summary>
            Initializes a new instance of the PrimitiveGetBlockPermalockResult class 
            (copy constructor)
            </summary>
            <param name="primitiveGetBlockPermalockResult">instance to copy</param>
        </member>
        <member name="M:Impinj.OctaneSdk.PrimitiveGetBlockPermalockResult.Clone">
            <summary>
            Create a copy of the PrimitiveGetBlockPermalockResult
            </summary>
            <returns>PrimitiveGetBlockPermalockResult</returns>
        </member>
        <member name="P:Impinj.OctaneSdk.PrimitiveGetBlockPermalockResult.Result">
            <summary>
            The access result of the get block permalock primitive operation
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.PrimitiveGetBlockPermalockResult.PermalockStatus">
            <summary>
            A string describing the permalock status.
            </summary>
            <remarks>The result is a string containing a uint16 array
            (e.g. FE13 AA2E)</remarks>
        </member>
        <member name="T:Impinj.OctaneSdk.TxPowerFeatures">
            <summary>
            This class contains a variable-length array of
            <see cref="T:Impinj.OctaneSdk.TxPowerEntry"/> objects. Different reader
            products support different transmit powers and this class
            encapsulates that varying number.
            </summary>
            <seealso cref="T:Impinj.OctaneSdk.TxPowerEntry"/>
        </member>
        <member name="M:Impinj.OctaneSdk.TxPowerFeatures.#ctor">
            <summary>
            Initializes a new instance of the
            TxPowerFeatures class.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TxPowerFeatures.Entries">
            <summary>
            A variable-length collection of
            <see cref="T:Impinj.OctaneSdk.TxPowerEntry"/> objects.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.TxFrequencyFeatures">
            <summary>
            This class contains a variable-length array of
            <see cref="T:Impinj.OctaneSdk.TxFrequencyEntry"/> objects. Different reader
            products use different frequencies encapsulates that varying
            number.
            </summary>
            <seealso cref="T:Impinj.OctaneSdk.TxFrequencyEntry"/>
        </member>
        <member name="M:Impinj.OctaneSdk.TxFrequencyFeatures.#ctor">
            <summary>
            Initializes a new instance of the
            TxFrequencyFeatures class.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TxFrequencyFeatures.Entries">
            <summary>
            A variable-length collection of
            <see cref="T:Impinj.OctaneSdk.TxFrequencyEntry"/> objects.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.FeatureSet">
            <summary>
            This class reports the capabilities and feautures of a reader
            </summary>
            <remarks>
            Reader features can be queried through the SpeedwayReader class
            <see cref="M:Impinj.OctaneSdk.SpeedwayReader.QueryFeatureSet"/> method.  
            This method returns
            an instance of this class.  The features set describes the 
            features of the reader that may vary from model to model, 
            from one regulatory region to another, and between one individual
            reader and another. 
            </remarks>
        </member>
        <member name="M:Impinj.OctaneSdk.FeatureSet.#ctor">
            <summary>
            Initializes a new instance of the FeatureSet class.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.FeatureSet.QueryFactorySettings">
            <summary>
            Return the settings typically used for this reader.
            It is common to get these settings and then adjust
            them.
            </summary>
            <returns>A new <see cref="T:Impinj.OctaneSdk.Settings"/> instance
            with nominal values for this reader.</returns>
        </member>
        <member name="M:Impinj.OctaneSdk.FeatureSet.Save(System.String)">
            <summary>
            Save these features to a file as XML.
            </summary>
            <param name="path">The path name of the file.</param>
            <exception cref="T:System.Exception">
            Thrown when the file can not be created.</exception>
        </member>
        <member name="P:Impinj.OctaneSdk.FeatureSet.ModelName">
            <summary>
            The common model name of the reader, example: Speedway R420
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.FeatureSet.SerialNumber">
            <summary>
            The serial number of the reader, example: 940-09-22-0001
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.FeatureSet.SoftwareVersion">
            <summary>
            The software version, example: 4.4.0.240
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.FeatureSet.FirmwareVersion">
            <summary>
            The firmware (modem) version, example: 4.4.0.20
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.FeatureSet.FpgaVersion">
            <summary>
            The FPGA mask program version, example: 4.4.0.64
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.FeatureSet.PcbaVersion">
            <summary>
            The Printed Circuit Board Assembly version, example: 250-002-000
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.FeatureSet.ModelNumber">
            <summary>
            The integer model number from LLRP, example: 2001002
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.FeatureSet.Subregion">
            <summary>
            The regulatory region the reader complies to,
            example: FCC_Part_15_247.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.FeatureSet.IsHoppingRegion">
            <summary>
            Whether the reader's region uses hopping.
            False means the frequency may be selected
            by the application.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.FeatureSet.ReaderIdentity">
            <summary>
            The reader's unique identity, 16 hex digits,
            example: 001625FFFF0000C3
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.FeatureSet.AntennaCount">
            <summary>
            The number of antenna ports on the reader.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.FeatureSet.GpiCount">
            <summary>
            The number of General Purpose Input (GPI) ports on the reader.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.FeatureSet.GpoCount">
            <summary>
            The number of General Purpose Output (GPO) ports on the reader.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.FeatureSet.MaxAccessSpecs">
            <summary>
            The number of access specs suppored by the reader.
            This is important internally but rarely of interest
            to the application.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.FeatureSet.IsTagAccessAvailable">
            <summary>
            Whether the reader can do tag access, such as
            change tag EPC, r/w tag user memory.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.FeatureSet.IsFilteringAvailable">
            <summary>
            Whether the reader supports filters.
            <see cref="T:Impinj.OctaneSdk.FilterSettings"/>
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.FeatureSet.IsGpiDebounceAvailable">
            <summary>
            Whether the reader supports debouncing general
            purpose inputs.
            See <see cref="T:Impinj.OctaneSdk.GpiSettings"/>
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.FeatureSet.IsLinkMonitorAvailable">
            <summary>
            Whether the reader supports link monitoring.
            See <see cref="T:Impinj.OctaneSdk.KeepAliveSettings"/>
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.FeatureSet.IsMultiwordBlockWriteAvailable">
            <summary>
            Whether the reader supports multiwork block write.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.FeatureSet.IsPhaseAngleReportingAvailable">
            <summary>
            Whether the reader supports phase angle reporting.
            See <see cref="T:Impinj.OctaneSdk.ReportSettings"/> and <see cref="T:Impinj.OctaneSdk.Tag"/>.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.FeatureSet.IsSerializedTidReportingAvailable">
            <summary>
            Whether the reader supports automatic reading
            of seriliazed TID (Tag ID).
            See <see cref="T:Impinj.OctaneSdk.ReportSettings"/> and <see cref="T:Impinj.OctaneSdk.Tag"/>.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.FeatureSet.IsImpinjRssiReportingAvailable">
            <summary>
            Whether the reader supports higher precission RSSI
            reporting.
            See <see cref="T:Impinj.OctaneSdk.ReportSettings"/> and <see cref="T:Impinj.OctaneSdk.Tag"/>.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.FeatureSet.ReaderModes">
            <summary>
            Reader modes supported by the reader. These
            control RF modulation and data encoding.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.FeatureSet.SearchModes">
            <summary>
            Search modes supported by the reader.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.FeatureSet.TxPowers">
            <summary>
            Transmit powers available on the reader.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.FeatureSet.RxSensitivities">
            <summary>
            Receive sensitivities available on the reader.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.FeatureSet.TxFrequencies">
            <summary>
            Transmit frequencies used by the reader.
            In non-hopping regions these are the frequencies
            that may be requested by the application.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.FeatureSet.ReducedPowerTxFrequencies">
            <summary>
            Frequencies that may have their power reduced.
            Used to mitigate interference. Only available
            in the FCC region.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.FeatureSet.FactorySettings">
            <summary>
            The <see cref="T:Impinj.OctaneSdk.Settings"/> crafted from factor values
            on the reader.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ConnectionAttemptedEventArgs">
            <summary>
            Contains the information associated with a connection
            attempt event used in <see cref="E:Impinj.OctaneSdk.SpeedwayReader.ConnectionAttempted"/>
            and <see cref="M:Impinj.OctaneSdk.SpeedwayReader.OnConnectionAttempted(Impinj.OctaneSdk.ConnectionAttemptedEventArgs)"/>.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ConnectionAttemptedEventArgs.ReaderIdentity">
            <summary>
            The identity of the reader reporting this event
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ConnectionAttemptedEventArgs.Timestamp">
            <summary>
            The time associated with the event
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.QtAccessRange">
            <summary>
            Defines the access range settings for the Impinj QT tag command
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.QtAccessRange.Unknown">
            <summary>
            Access range setting is unknown
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.QtAccessRange.NormalRange">
            <summary>
            Tag access can take place at normal range.  
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.QtAccessRange.ShortRange">
            <summary>
            Tag access can only occur at short range.  
            </summary>
            <remarks>Inventory will still happen at normal range.
            </remarks>
        </member>
        <member name="T:Impinj.OctaneSdk.ReadUserMemoryParams">
            <summary>
            Class to carry the configuration for a
            <see cref="M:Impinj.OctaneSdk.SpeedwayReader.ReadUserMemory(Impinj.OctaneSdk.ReadUserMemoryParams)"/> operation
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ReadUserMemoryParams.#ctor">
            <summary>
            Initializes a new instance of the ReadUserMemoryParams class
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ReadUserMemoryParams.#ctor(Impinj.OctaneSdk.CommonAccessParams)">
            <summary>
            Initializes a new instance of the ReadUserMemoryParams class
            from a commonAccessParams instance
            </summary>
            <param name="commonAccessParams">initializer</param>
        </member>
        <member name="M:Impinj.OctaneSdk.ReadUserMemoryParams.#ctor(Impinj.OctaneSdk.ReadUserMemoryParams)">
            <summary>
            Initializes a new instance of the ReadUserMemoryParams class
            (copy constructor)
            </summary>
            <param name="readUserMemoryParams">instance to copy</param>
        </member>
        <member name="P:Impinj.OctaneSdk.ReadUserMemoryParams.WordPointer">
            <summary>
            The start address of the user memory read in 16-bit words
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ReadUserMemoryParams.WordCount">
            <summary>
            The number of 16-bit words to read
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ApplicationConnectionState">
            <summary>
            Indicates the status of the network connected between
            the application and the reader.
            </summary>
            <remarks>
            The <see cref="T:Impinj.OctaneSdk.Status"/> returned by
            <see cref="M:Impinj.OctaneSdk.SpeedwayReader.QueryStatus(Impinj.OctaneSdk.StatusRefresh)"/>,
            the ConnectionChangedEventArgs, and OctaneConnectException
            indicate the status of the LLRP connection or a connection
            attempt.
            </remarks>
        </member>
        <member name="F:Impinj.OctaneSdk.ApplicationConnectionState.NotConnected">
            <summary>
            There is no current LLRP connection.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.ApplicationConnectionState.Connected">
            <summary>
            There is a good LLRP connection.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.ApplicationConnectionState.Disconnected">
            <summary>
            The connection was ended by the application's call
            to SpeedwayReader.Disconnect.
            This value only appears in ConnectionChangedEventArgs.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.ApplicationConnectionState.ConnectionLost">
            <summary>
            The connection was unexpectedely lost. The connection
            persists in this state until SpeedwayReader.Disconnect
            is called.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.ApplicationConnectionState.FailedReaderNotOnNetwork">
            <summary>
            An attempt to connect to the reader using
            SpeedwayReader.Connect failed because the
            reader name could not be looked up or because
            the reader did not respond to the connection
            request.
            This usually means that the name or address
            given to Connect is invalid.
            This value only appears in ConnectionChangedEventArgs and
            OctaneConnectException.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.ApplicationConnectionState.FailedReaderConnectedToAnother">
            <summary>
            An attempt to connect to the reader using
            SpeedwayReader.Connect failed because the
            reader is already connected to another application.
            There was a very brief LLRP connection to receive
            this status.
            This value only appears in ConnectionChangedEventArgs and
            OctaneConnectException.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.ApplicationConnectionState.FailedReaderOtherReason">
            <summary>
            An attempt to connect to the reader using
            SpeedwayReader.Connect failed for an unusual reason.
            This usually means there is something wrong with the
            reader and its best to log onto the reader with ssh
            or telnet and check the log.
            This value only appears in ConnectionChangedEventArgs and
            OctaneConnectException.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.RunPrimitiveSequenceParams">
            <summary>
            Class used to carry the configuration for the
            <see cref="M:Impinj.OctaneSdk.SpeedwayReader.RunPrimitiveSequence(Impinj.OctaneSdk.RunPrimitiveSequenceParams)"/> method
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.RunPrimitiveSequenceParams.#ctor">
            <summary>
            Initializes a new instance of the RunPrimitiveSequenceParams class
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.RunPrimitiveSequenceParams.#ctor(Impinj.OctaneSdk.CommonAccessParams)">
            <summary>
            Initializes a new instance of the RunPrimitiveSequenceParams class
            from a commonAccessParams instance
            </summary>
            <param name="commonAccessParams">initializer</param>
        </member>
        <member name="M:Impinj.OctaneSdk.RunPrimitiveSequenceParams.#ctor(Impinj.OctaneSdk.RunPrimitiveSequenceParams)">
            <summary>
            Initializes a new instance of the RunPrimitiveSequenceParams class
            (copy constructor)
            </summary>
            <param name="runPrimitiveSequenceParams">instance to copy</param>
        </member>
        <member name="P:Impinj.OctaneSdk.RunPrimitiveSequenceParams.PrimitiveParams">
            <summary> The list of primitive operations to perform</summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ProgramUserBlockParams">
            <summary>
            Class to carry the configuration for a
            <see cref="M:Impinj.OctaneSdk.SpeedwayReader.ProgramUserBlock(Impinj.OctaneSdk.ProgramUserBlockParams)"/> operation
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ProgramUserBlockParams.#ctor">
            <summary>
            Initializes a new instance of the ProgramUserBlockParams class
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ProgramUserBlockParams.#ctor(Impinj.OctaneSdk.CommonAccessParams)">
            <summary>
            Initializes a new instance of the ProgramUserBlockParams class
            from a commonAccessParams instance
            </summary>
            <param name="commonAccessParams">initializer</param>
        </member>
        <member name="M:Impinj.OctaneSdk.ProgramUserBlockParams.#ctor(Impinj.OctaneSdk.ProgramUserBlockParams)">
            <summary>
            Initializes a new instance of the ProgramUserBlockParams class
            (copy constructor)
            </summary>
            <param name="programUserBlockParams">instance to copy</param>
        </member>
        <member name="P:Impinj.OctaneSdk.ProgramUserBlockParams.WordPointer">
            <summary>
            The offset in words (16-bits) within the memory bank
            to begin programming
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ProgramUserBlockParams.NewUserBlock">
            <summary>
            A hexidecimal string representing the data to program.
            </summary>
            <remarks>
            This string must be a multiple of 4 hexadecimal characters.
            The string cannot be longer than the Constants.MaxWriteWordCount
            words (with 4 hexadecimal characters per word).
            </remarks>
        </member>
        <member name="P:Impinj.OctaneSdk.ProgramUserBlockParams.IsWriteVerified">
            <summary>
            Verify the user block program operation with a read
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ProgramUserBlockParams.IsBlockWriteUsed">
            <summary>
            use block write to write the new user block
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ProgramUserBlockParams.BlockWriteWordCount">
            <summary>
            If block write is used above, specifies the size of the
            block
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ProgramUserBlockParams.LockType">
            <summary>
            sets theh lock status for the block after the program
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ProgramUserBlockParams.BlockNumber">
            <summary>
            The block to lock when lock type is set to LockType.PermaLocked
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.GpioState">
            <summary>
            Indicates the status of an general purpose input (GPI) port.
            </summary>
            <remarks>
            The <see cref="T:Impinj.OctaneSdk.Status"/> returned by
            <see cref="M:Impinj.OctaneSdk.SpeedwayReader.QueryStatus(Impinj.OctaneSdk.StatusRefresh)"/>,
            contains status per each GPI port.
            </remarks>
        </member>
        <member name="F:Impinj.OctaneSdk.GpioState.Unknown">
            <summary>
            The input level of a GPI port is
            not known. This usually means that communication
            with the reader is not established.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.GpioState.NotApplicable">
            <summary>
            There is no such GPI port on the reader.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.GpioState.Low">
            <summary>
            The GPI port is sensing an input low.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.GpioState.High">
            <summary>
            The GPI port is sensing an input high.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.PrimitiveReadResult">
            <summary>
            The low level access primitive for conveying the read primitive
            results.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.PrimitiveReadResult.#ctor">
            <summary>
            construct a PrimitiveReadResult instance
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.PrimitiveReadResult.#ctor(Impinj.OctaneSdk.PrimitiveReadResult)">
            <summary>
            construct a PrimitiveReadResult instance
            (copy constructor)
            </summary>
            <param name="primitiveReadResult">instance to copy</param>
        </member>
        <member name="M:Impinj.OctaneSdk.PrimitiveReadResult.Clone">
            <summary>
            Duplicate the instance
            </summary>
            <returns>PrimitiveReadResult</returns>
        </member>
        <member name="P:Impinj.OctaneSdk.PrimitiveReadResult.Result">
            <summary>
            The access result of the read primitive operation
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.PrimitiveReadResult.ReadData">
            <summary>
            The data read by the PrimitiveReadParam
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.KillTagResult">
            <summary>
            Class used to carry the result of a SpeedwayReader.KillTag operation
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.KillTagResult.#ctor">
            <summary>
            Initializes a new instance of the KillTagResult class
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.KillTagResult.#ctor(Impinj.OctaneSdk.CommonAccessResult)">
            <summary>
            Initializes a new instance of the KillTagResult class
            from a commonAccessResult
            </summary>
            <param name="commonAccessResult">initializer</param>
        </member>
        <member name="M:Impinj.OctaneSdk.KillTagResult.#ctor(Impinj.OctaneSdk.KillTagResult)">
            <summary>
            Initializes a new instance of the KillTagResult class
            (copy constructor)
            </summary>
            <param name="killTagResult">instance to copy</param>
        </member>
        <member name="P:Impinj.OctaneSdk.KillTagResult.KillResult">
            <summary>
            The result of the tag kill operation
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ListOfGpoStatus">
            <summary>
            This class contains a variable-length array of
            <see cref="T:Impinj.OctaneSdk.GpoStatus"/> objects. Different reader products
            support different numbers of general purpose inputs (GPOs)
            and this class encapsulates that varying number.
            </summary>
            <seealso cref="T:Impinj.OctaneSdk.GpoStatus"/>
        </member>
        <member name="F:Impinj.OctaneSdk.ListOfGpoStatus.Elements">
            <summary>
            A variable-length array of <see cref="T:Impinj.OctaneSdk.GpoStatus"/>
            objects.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ListOfGpoStatus.#ctor">
            <summary>
            Initializes a new instance of the ListOfGpoStatus class.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ListOfGpoStatus.#ctor(Impinj.OctaneSdk.ListOfGpoStatus)">
            <summary>
            Initializes a new instance of the ListOfGpoStatus class
            (copy constructor).
            </summary>
            <param name="listOfGpoStatus">
            The object instance to copy.
            </param>
        </member>
        <member name="M:Impinj.OctaneSdk.ListOfGpoStatus.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Implements the GetEnumerator method of the IEnumerator
            interface.
            </summary>
            <returns>
            IEnumerator
            </returns>
        </member>
        <member name="M:Impinj.OctaneSdk.ListOfGpoStatus.GetEnumerator">
            <summary>
            Accessor method for the <see cref="T:Impinj.OctaneSdk.GpoStatus"/> array.
            </summary>
            <returns>
            An enumerator for the <see cref="T:Impinj.OctaneSdk.GpoStatus"/> array.
            </returns>
        </member>
        <member name="M:Impinj.OctaneSdk.ListOfGpoStatus.Add(Impinj.OctaneSdk.GpoStatus)">
            <summary>
            Adds a new <see cref="T:Impinj.OctaneSdk.GpoStatus"/> object to the
            Elements array. The new object is added to the array based
            on the port number found within the object.
            </summary>
            <param name="gpiStatus">
            The <see cref="T:Impinj.OctaneSdk.GpoStatus"/> object to add.
            </param>
        </member>
        <member name="P:Impinj.OctaneSdk.ListOfGpoStatus.Item(System.Int32)">
            <summary>
            Overload of the [] operator. The <see cref="T:Impinj.OctaneSdk.GpoStatus"/>
            object of the specified GPO port is returned.
            </summary>
            <param name="gpiPortNumber">
            The 1-based GPO port number to retrieve.
            </param>
            <returns>
            The requested <see cref="T:Impinj.OctaneSdk.GpoStatus"/> object, if
            present.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when <paramref name="gpiPortNumber"/> is invalid.
            </exception>
        </member>
        <member name="T:Impinj.OctaneSdk.GpiStatus">
            <summary>
            The status information for a general purpose input (GPI) port.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.GpiStatus.#ctor">
            <summary>
            Initializes a new instance of the GpiStatus class.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.GpiStatus.#ctor(Impinj.OctaneSdk.GpiStatus)">
            <summary>
            Initializes a new instance of the GpiStatus class (copy
            constructor).
            </summary>
            <param name="gpiStatus">
            The object instance to copy.
            </param>
        </member>
        <member name="P:Impinj.OctaneSdk.GpiStatus.PortNumber">
            <summary>
            The antenna port number, 1-4.
            </summary>
            <remarks>
            This is advisory so the port number is known
            when using foreach, or when passing a
            single GPI status as an argument.
            </remarks>
        </member>
        <member name="P:Impinj.OctaneSdk.GpiStatus.State">
            <summary>
            The current input level of the GPI port.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.GpiStatus.IsEnabled">
            <summary>
            Whether the application enabled this GPI.
            If so the reader sends change notifications.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.AntennaSettings">
            <summary>
            This class contains all the settings for a single antenna.
            </summary>
            <remarks>
            This Settings object contains one instance of this object for
            each antenna provided by the reader. Within each object are
            all the settings that can be configured on a per-antenna
            basis within the reader.
            </remarks>
        </member>
        <member name="M:Impinj.OctaneSdk.AntennaSettings.#ctor">
            <summary>
            Initializes a new instance of the AntennaSettings class.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.AntennaSettings.#ctor(Impinj.OctaneSdk.AntennaSettings)">
            <summary>
            Initializes a new instance of the AntennaSettings class
            (copy constructor).
            </summary>
            <param name="antennaSettings">
            The object instance to copy.
            </param>
        </member>
        <member name="P:Impinj.OctaneSdk.AntennaSettings.PortNumber">
            <summary>
            The reader antenna port for which these settings are
            applied. Antenna ports range from 1-4 depending on the
            reader model.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.AntennaSettings.IsEnabled">
            <summary>
            Whether this antenna port is enabled or not. When set to
            true, the antenna will be used to singulate tags.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.AntennaSettings.TxPowerInDbm">
            <summary>
            The power at the antenna port applied when the antenna is
            active. Transmit power is specified in dBm (e.g. 30.00).
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.AntennaSettings.RxSensitivityInDbm">
            <summary>
            The minimum signal strength received by the reader for
            the tag response to be processed. This value can be used
            to filter tag responses such that only strong tags are
            seen. A value of 0 accepts all tags (max sensitivity).
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.SearchModeFeatures">
            <summary>
            This class contains a variable-length array of
            <see cref="T:Impinj.OctaneSdk.SearchModeEntry"/> objects. Different reader
            products support different modes and this class
            encapsulates that varying number.
            </summary>
            <seealso cref="T:Impinj.OctaneSdk.SearchModeEntry"/>
        </member>
        <member name="M:Impinj.OctaneSdk.SearchModeFeatures.#ctor">
            <summary>
            Initializes a new instance of the
            SearchModeFeatures class.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.SearchModeFeatures.Entries">
            <summary>
            A variable-length collection of
            <see cref="T:Impinj.OctaneSdk.SearchModeEntry"/> objects.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.AntennaConnectionState">
            <summary>
            Indicates the status of an antenna port.
            </summary>
            <remarks>
            The <see cref="T:Impinj.OctaneSdk.Status"/> returned by
            <see cref="M:Impinj.OctaneSdk.SpeedwayReader.QueryStatus(Impinj.OctaneSdk.StatusRefresh)"/>
            contains status per each antenna port.
            This enumeration indicates whether there is an
            antenna connected to the antenna port.
            </remarks>
        </member>
        <member name="F:Impinj.OctaneSdk.AntennaConnectionState.Unknown">
            <summary>
            The connection status of the antenna port is
            not known. This usually means that communication
            with the reader is not established.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.AntennaConnectionState.NotApplicable">
            <summary>
            There is no such antenna port on the reader.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.AntennaConnectionState.Connected">
            <summary>
            An antenna is connected to the antenna port.
            Note that a long cable with no antenna can be
            interpretted as a connected antenna. The best
            way to be certain of an antenna connection
            is to verify tags can be seen by the antenna.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.AntennaConnectionState.NotConnected">
            <summary>
            The antenna port exists but there is no antenna connected.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ReadKillPasswordResult">
            <summary>
            Class that contains the result of 
            a <see cref="M:Impinj.OctaneSdk.SpeedwayReader.ReadKillPassword(Impinj.OctaneSdk.ReadKillPasswordParams)"/>
            operation
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ReadKillPasswordResult.#ctor">
            <summary>
            Initializes a new instance of the ReadKillPasswordResult class 
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ReadKillPasswordResult.#ctor(Impinj.OctaneSdk.CommonAccessResult)">
            <summary>
            Initializes a new instance of the ReadKillPasswordResult class 
            from a commonAccessResult instance
            </summary>
            <param name="commonAccessResult">initializer</param>
        </member>
        <member name="M:Impinj.OctaneSdk.ReadKillPasswordResult.#ctor(Impinj.OctaneSdk.ReadKillPasswordResult)">
            <summary>
            Initializes a new instance of the ReadKillPasswordResult class 
            (copy constructor)
            </summary>
            <param name="readKillPasswordResult">instance to copy</param>
        </member>
        <member name="P:Impinj.OctaneSdk.ReadKillPasswordResult.ReadResult">
            <summary>
            The result of the kill password read operation
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.PrimitiveGetBlockPermalockParams">
            <summary>
            The low level access primitive for getting the block permalock
            status from a tag
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.PrimitiveGetBlockPermalockParams.#ctor">
            <summary>
            Consturct a PrimitiveGetBlockPermalockParams instance
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.PrimitiveGetBlockPermalockParams.#ctor(Impinj.OctaneSdk.PrimitiveGetBlockPermalockParams)">
            <summary>
            construct a PrimitiveGetBlockPermalockParams instance
            (copy constructor)
            </summary>
            <param name="primitiveGetBlockPermalockParams">instance to copy</param>
        </member>
        <member name="M:Impinj.OctaneSdk.PrimitiveGetBlockPermalockParams.Clone">
            <summary>
            Duplicate the instance
            </summary>
            <returns>PrimitiveGetBlockPermalockParams</returns>
        </member>
        <member name="P:Impinj.OctaneSdk.PrimitiveGetBlockPermalockParams.MemoryBank">
            <summary>
            The memory bank from which block permalock status is desired
            </summary>
            <remarks>Currently this must be MemoryBank.User</remarks>
        </member>
        <member name="P:Impinj.OctaneSdk.PrimitiveGetBlockPermalockParams.BlockPointer">
            <summary>
            The pointer to the first block from which status is desired 
            </summary>
            <remarks>Must be greater than or equal to zero</remarks>
        </member>
        <member name="P:Impinj.OctaneSdk.PrimitiveGetBlockPermalockParams.BlockRange">
            <summary>
            The block range from which status is desired
            </summary>
            <remarks>Must be greater than zero and less than or equal to 
            Constants.MaxBlockPermalockWordCount </remarks>
        </member>
        <member name="T:Impinj.OctaneSdk.AntennaStatus">
            <summary>
            The status information for an antenna port.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.AntennaStatus.#ctor">
            <summary>
            Initializes a new instance of the AntennaStatus class.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.AntennaStatus.#ctor(Impinj.OctaneSdk.AntennaStatus)">
            <summary>
            Initializes a new instance of the AntennaStatus class
            (copy constructor).
            </summary>
            <param name="antennaStatus">
            The object instance to copy.
            </param>
        </member>
        <member name="P:Impinj.OctaneSdk.AntennaStatus.PortNumber">
            <summary>
            The antenna port number, 1-4.
            </summary>
            <remarks>
            This is advisory so the port number is known
            when using foreach, or when passing a
            single antenna status as an argument.
            </remarks>
        </member>
        <member name="P:Impinj.OctaneSdk.AntennaStatus.State">
            <summary>
            Whether the antenna port is connected
            to an antenna.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.AntennaStatus.IsEnabled">
            <summary>
            Whether the application enabled this antenna.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.AntennaStatus.IsConnected">
            <summary>
            True if the anntena port is connected to an antenna.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.IOctaneSDKExtension.SetLTKProxy(Impinj.OctaneSdk.Internals.LtkProxy)">
            <summary>
            Sets the LTKProxy object to be available in the extension, to allow access
            to LLRP messaging
            </summary>
            <param name="proxy">
            the LtkProxy object 
            </param>
        </member>
        <member name="T:Impinj.OctaneSdk.AntennaChangedEventArgs">
            <summary>
            Contains the information carries by the Antenna Change event
            which notifies the user when an atenna connects or disconnects
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.AntennaChangedEventArgs.ReaderIdentity">
            <summary>
            The identity of the reader reporting this event
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.AntennaChangedEventArgs.Timestamp">
            <summary>
            The time associated with the event
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.AntennaChangedEventArgs.PortNumber">
            <summary>
            The antenna port number associated with thhis event
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.AntennaChangedEventArgs.State">
            <summary>
            The new antenna connection state associated with this event
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.AutoStartMode">
            <summary>
            This enumeration defines the various modes in which the reader
            starts scanning for tags automatically.
            </summary>
            <remarks>
            When the reader is configured to operate autonomously (without
            application intervention), it can start scanning for tags
            based on some outside trigger. This enumeration defines those
            various triggers.
            </remarks>
        </member>
        <member name="F:Impinj.OctaneSdk.AutoStartMode.None">
            <summary>
            Do not start scanning for tags automatically. The reader
            will only start scanning if the application invokes the
            Start method of the Reader class. This is the default
            behavior.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.AutoStartMode.Immediate">
            <summary>
            Start scanning for tags immediately. The reader will start
            scanning for tags immediately after the Settings object is
            applied to the reader via the ApplySettings method of the
            SpeedwayReader class.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.AutoStartMode.GpiTrigger">
            <summary>
            Start scanning when a general-purpose input (GPI) changes
            state (either a logic high or a logic low). GPIs are
            numbered 1-4 and may vary in number by reader model.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.AutoStartMode.Periodic">
            <summary>
            Start scanning for tags periodically. The reader will
            automatically start scanning after a specified duration.
            Note that this mode is typically associated with an
            auto-stop mode.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.AccessResult">
            <summary>
            Defines the result codes for access operations.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.AccessResult.None">
            <summary>
            The default value when constructing objects with AccessResult
            elements.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.AccessResult.Success">
            <summary>
            The access operation succeeded
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.AccessResult.Error">
            <summary>
            An unspecified error occurred during the access operation
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.AccessResult.InternalError">
            <summary>
            An interal library error occurred during the access operation
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.AccessResult.BlockWriteFailure">
            <summary>
            An unexpected failure occurred when performing a block write access operation
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.AccessResult.GetBlockPermalockFailure">
            <summary>
            An unexpected failure occurred when getting the block permalock status.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.AccessResult.GetQtConfigFailure">
            <summary>
            An unexpected failure occurred when getting the tag Qt configuration
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.AccessResult.KillFailure">
            <summary>
            An unexpected failure occurred when performing a tag kill operation.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.AccessResult.LockFailure">
            <summary>
            An unexpected failure occurred when performing a tag lock operation.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.AccessResult.ReadFailure">
            <summary>
            An unexpected failure occurred when performing a tag read operation.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.AccessResult.SetBlockPermalockFailure">
            <summary>
            An unexpected failure occurred when setting the block permalock status
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.AccessResult.SetQtConfigFailure">
            <summary>
            An unexpected failure occurred when setting the tag Qt configuration
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.AccessResult.WriteFailure">
            <summary>
            An unexpected failure occurred when performing a tag write operation.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.AccessResult.WriteVerifyFailure">
            <summary>
            The tag program operation succeeded but the verification failed
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.AccessResult.NoResponseFromTag">
            <summary>
            The tag did not respond to the acccess operation
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.AccessResult.NonSpecificTagError">
            <summary>
            The tag reported an error during this access operation,
            but the error was not specified.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.AccessResult.NonSpecificReaderError">
            <summary>
            There was an unspecified reader error when performing this
            access operation
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.AccessResult.TagMemoryOverrun">
            <summary>
            Attempt to access tag memory outside the available memory
            range defined on the tag.  
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.AccessResult.TagMemoryLocked">
            <summary>
            Attempt to access tag memory that was locked.  This can occur
            if a write is attempted to a locked memory area
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.AccessResult.InsufficientPower">
            <summary>
            There was insufficient power (at the tag) to perform the access
            operation.  NOTE: Some access operations (like write) require
            more power than an inventory operation. It's possible that your
            application can inventory the tag but will be unable to write the 
            tag due to insufficient power
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.AccessResult.ZeroKillPassword">
            <summary>
            The tag could not be killed because it has a zero
            kill password.  The EpcGlobal C1G2 specification
            requires that a tag have a non-zero kill password for
            the kill operation to succeed.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.AccessResult.IncorrectPassword">
            <summary>
            The password provided for the tag was incorrect.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ReadAccessPasswordParams">
            <summary>
            Class to carry the configuration for a
            <see cref="M:Impinj.OctaneSdk.SpeedwayReader.ReadAccessPassword(Impinj.OctaneSdk.ReadAccessPasswordParams)"/> operation
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ReadAccessPasswordParams.#ctor">
            <summary>
            Initializes a new instance of the ReadAccessPasswordParams class
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ReadAccessPasswordParams.#ctor(Impinj.OctaneSdk.CommonAccessParams)">
            <summary>
            Initializes a new instance of the ReadAccessPasswordParams class
            from a commonAccessParams instance
            </summary>
            <param name="commonAccessParams">initializer</param>
        </member>
        <member name="M:Impinj.OctaneSdk.ReadAccessPasswordParams.#ctor(Impinj.OctaneSdk.ReadAccessPasswordParams)">
            <summary>
            Initializes a new instance of the ReadAccessPasswordParams class
            (copy constructor)
            </summary>
            <param name="readAccessPasswordParams">instance to copy</param>
        </member>
        <member name="T:Impinj.OctaneSdk.Status">
            <summary>
            The status information for the reader.
            These values change from time to time.
            </summary>
            <seealso cref="M:Impinj.OctaneSdk.SpeedwayReader.QueryStatus(Impinj.OctaneSdk.StatusRefresh)"/>
        </member>
        <member name="M:Impinj.OctaneSdk.Status.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.Status.#ctor(Impinj.OctaneSdk.Status)">
            <summary>
            Copy constructor
            </summary>
            <param name="status">instance to copy</param>
        </member>
        <member name="P:Impinj.OctaneSdk.Status.ReaderIdentity">
            <summary>
            Application set identity for this reader.
            </summary>
            <remarks>
            <see cref="P:Impinj.OctaneSdk.SpeedwayReader.ReaderIdentity"/>
            </remarks>
        </member>
        <member name="P:Impinj.OctaneSdk.Status.Connection">
            <summary>
            The state of the network connection to the reader.
            Example: ApplicationConnectionState.Connected. Possible
            values are NotConnected, Connected, Disconnected,
            ConnectionLost.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Status.Operational">
            <summary>
            The state of the reader RFID activity. Example:
            OperationalState.Ready. Possible values are: Unknown,
            NotConfigured, Ready, Singulating.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Status.TemperatureInCelsius">
            <summary>The on-board temperature of the readers power amplifier.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Status.Antennas">
            <summary>
            Table of antenna status. 
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Status.Gpis">
            <summary>
            Table of GPI status.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Status.Gpos">
            <summary>
            Table of GPO status.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Status.IsConnected">
            <summary>
            Value is true if the SpeedwayReader object is connected
            to a reader.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Status.IsSingulating">
            <summary>
            Value is true if the reader connected to the SpeedwayReader
            object is currently singulating tags.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.GpiSettings">
            <summary>
            This class contains all the settings for a single general
            purpose input (GPI).
            </summary>
            <remarks>
            This Settings object contains one instance of this object for
            each GPI provided by the reader. Within each object are all
            the settings that can be configured on a per-GPI basis within
            the reader.
            </remarks>
        </member>
        <member name="M:Impinj.OctaneSdk.GpiSettings.#ctor">
            <summary>
            Initializes a new instance of the GpiSettings class.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.GpiSettings.#ctor(Impinj.OctaneSdk.GpiSettings)">
            <summary>
            Initializes a new instance of the GpiSettings class (copy
            constructor).
            </summary>
            <param name="gpiSettings">
            The object instance to copy.
            </param>
        </member>
        <member name="P:Impinj.OctaneSdk.GpiSettings.PortNumber">
            <summary>
            The reader GPI port for which these settings are applied.
            GPI ports range from 1-4 depending on the reader model.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.GpiSettings.IsEnabled">
            <summary>
            Whether the GPI port is monitored by the reader for level
            changes. When this property is set to true, the reader
            will monitor the GPI level for transitions and report
            those events. When this property is set to false, the GPI
            is ignored by the reader. Note that to use a GPI for an
            AutoStart or AutoStop trigger, it must be set to enabled.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.GpiSettings.DebounceInMs">
            <summary>
            If the input source to a GPI is noisy or not debounced via
            a hardware circuit, this property can be used to limit the
            reporting of transitional changes (a software debounce).
            This value is specified in milliseconds and must be a
            multiple of 10 ms.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.AutoStartSettings">
            <summary>
            This class contains the settings that allow the reader to
            operate autonomously. It is used in association with the
            AutoStopSettings class.
            </summary>
            <remarks>
            The reader can be configured to start singulating
            automatically based on certain input parameters, such as a
            general purpose input (GPI) transitioning or a timer
            expiring. This class contains those settings.
            </remarks>
        </member>
        <member name="M:Impinj.OctaneSdk.AutoStartSettings.#ctor">
            <summary>
            Initializes a new instance of the AutoStartSettings class.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.AutoStartSettings.#ctor(Impinj.OctaneSdk.AutoStartSettings)">
            <summary>
            Initializes a new instance of the AutoStartSettings class
            (copy constructor).
            </summary>
            <param name="autoStartSettings">
            The object instance to copy.
            </param>
        </member>
        <member name="P:Impinj.OctaneSdk.AutoStartSettings.Mode">
            <summary>
            The auto-start mode. This setting dictates whether the
            reader will start singulating automatically or not. The
            remaining properties contained within this class are
            processed or ignored based on this value.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.AutoStartSettings.GpiPortNumber">
            <summary>
            The GPI on which to start singulating. GPI ports are
            numbered from 1-4 and may vary by reader model. This value
            is only used when Mode is set to GpiTrigger.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.AutoStartSettings.GpiLevel">
            <summary>
            The level of the GPI on which the reader will start
            singulating. A value of true means that the reader will
            auto-start when the GPI transitions high. A value of false
            means that the reader will auto-start when the the GPI
            transitions low. This value is only used when Mode is set
            to GpiTrigger.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.AutoStartSettings.FirstDelayInMs">
            <summary>
            The initial delay for when the reader will start
            singulating. This delay is specified in milliseconds.
            This value is only used when Mode is set to Periodic.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.AutoStartSettings.PeriodInMs">
            <summary>
            The periodic delay for which the reader will start
            singulating. A value of 5000 means that the reader would
            start singulating automatically every 5 seconds. Note that
            for the reader to start singulating, it must have stopped,
            so an appropriate AutoStopSettings Mode also needs to have
            been set. This delay is specified in milliseconds. This
            value is only used when Mode is set to Periodic.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.LoggingEventArgs">
            <summary>
            Data that accompanies a logging event
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.LoggingEventArgs.ReaderIdentity">
            <summary>
            The identity of the reader reporting this event
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.LoggingEventArgs.Timestamp">
            <summary>
            The time associated with the event
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.LoggingEventArgs.Entry">
            <summary>
            The log information associated with this event
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ConnectionChangedEventArgs">
            <summary>
            Contains the information associated with a Connection Changed
            event used in <see cref="E:Impinj.OctaneSdk.SpeedwayReader.ConnectionChanged"/> and 
            <see cref="M:Impinj.OctaneSdk.SpeedwayReader.OnConnectionChanged(Impinj.OctaneSdk.ConnectionChangedEventArgs)"/>
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ConnectionChangedEventArgs.ReaderIdentity">
            <summary>
            The identity of the reader reporting this event
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ConnectionChangedEventArgs.Timestamp">
            <summary>
            The time associated with the event
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ConnectionChangedEventArgs.State">
            <summary>
            The new connection state associated with this event
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ProgramEpcResult">
            <summary>
            Class to carry the results of a 
            <see cref="M:Impinj.OctaneSdk.SpeedwayReader.ProgramEpc(Impinj.OctaneSdk.ProgramEpcParams)"/> operation
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ProgramEpcResult.#ctor">
            <summary>
            Initializes a new instance of the ProgramEpcResult class 
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ProgramEpcResult.#ctor(Impinj.OctaneSdk.CommonAccessResult)">
            <summary>
            Initializes a new instance of the ProgramEpcResult class 
            from a commonAccessResult instance
            </summary>
            <param name="commonAccessResult">initializer</param>
        </member>
        <member name="M:Impinj.OctaneSdk.ProgramEpcResult.#ctor(Impinj.OctaneSdk.ProgramEpcResult)">
            <summary>
            Initializes a new instance of the ProgramEpcResult class 
            (copy constructor)
            </summary>
            <param name="programEpcResult">instance to copy</param>
        </member>
        <member name="P:Impinj.OctaneSdk.ProgramEpcResult.WriteResult">
            <summary>
            The result status of the EPC programming
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ProgramEpcResult.ReadResult">
            <summary>
            The result status of optional verify
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ProgramEpcResult.LockResult">
            <summary>
            The result status of optional EPC memory lock operation
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ReportSettings">
            <summary>
            This class contains all the settings for determining when the
            reader sends reports, and what the reader sends in those
            reports.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ReportSettings.#ctor">
            <summary>
            Initializes a new instance of the ReportSettings class.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ReportSettings.#ctor(Impinj.OctaneSdk.ReportSettings)">
            <summary>
            Initializes a new instance of the ReportSettings class
            (copy constructor).
            </summary>
            <param name="reportSettings">
            The object instance to copy.
            </param>
        </member>
        <member name="P:Impinj.OctaneSdk.ReportSettings.Mode">
            <summary>
            This property determines when the reader sends a report.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ReportSettings.IncludePeakRssi">
            <summary>
            This boolean enables the reporting of the peak RSSI at
            which a tag was read during the reporting interval.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ReportSettings.IncludeAntennaPortNumber">
            <summary>
            This boolean enables the reporting of the antenna port
            number on which the tag was read. If the tag was read on
            multiple antennas during the reporting interval, the
            report will contain multiple entries, one for each antenna
            on which the tag was read.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ReportSettings.IncludeFirstSeenTime">
            <summary>
            This boolean enables the reporting of the first time at
            which the tag was read during the reporting interval.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ReportSettings.IncludeLastSeenTime">
            <summary>
            This boolean enables the reporting of the last time at
            which the tag was read during the reporting interval.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ReportSettings.IncludeSeenCount">
            <summary>
            This boolean enables the reporting of the number of times
            the tag was read during the reporting interval.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ReportSettings.IncludeChannel">
            <summary>
            This boolean enables the reporting of the channel at
            which the tag was read. If the tag was read multiple times
            during the reporting interval, this is the frequency the
            reader was on when the tag was first seen.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ReportSettings.IncludePhaseAngle">
            <summary>
            This boolean enables the reporting of the phase angle of
            the tag response when the tag was read. If the tag was
            read multiple times during the reporting interval, this
            is the phase angle when the tag was last seen.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ReportSettings.IncludeSerializedTid">
            <summary>
            This boolean enables the reporting of the Serialized TID
            feature of some Monza4 tags. This feature is not supported
            on all tag types.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.LowDutyCycleSettings">
            <summary>
            This class contains all the settings for the low duty cycle
            feature of the reader. This feature allows for reduced RF
            activity when there are no tags in the reader's field of view.
            </summary>
            <remarks>
            This custom parameter provides fine-grained control of the RF
            duty cycle of the reader. While singulating, if the Reader
            reads zero tags on a particular enabled antenna for a total of
            EmptyFieldTimeoutInMs milliseconds, the reader will enter low
            duty cycle mode. In this mode, the reader will revisit this
            antenna every FieldPingIntervalInMs milliseconds checking for
            tags. When a tag is read, full duty cycle will resume.
            </remarks>
        </member>
        <member name="M:Impinj.OctaneSdk.LowDutyCycleSettings.#ctor">
            <summary>
            Initializes a new instance of the LowDutyCycleSettings
            class.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.LowDutyCycleSettings.#ctor(Impinj.OctaneSdk.LowDutyCycleSettings)">
            <summary>
            Initializes a new instance of the LowDutyCycleSettings
            class (copy constructor).
            </summary>
            <param name="lowDutyCycleSettings">
            The object instance to copy.
            </param>
        </member>
        <member name="P:Impinj.OctaneSdk.LowDutyCycleSettings.IsEnabled">
            <summary>
            This property determines if the low duty cycle mechanism
            is enabled. When enabled, the reader will periodically
            pause singulation on an antenna if it has not detected any
            tags in its field of view. When disabled, the reader will
            constantly attempt to singulate tags, even in the absence
            of any tags read.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.LowDutyCycleSettings.EmptyFieldTimeoutInMs">
            <summary>
            This property dictates how long the reader will attempt to
            singulate tags after it has determined that there are no
            tags present in its field of view. After this time has
            elapsed and no tags are seen, the antenna will enter low
            duty cycle mode where it will pause singulation to reduce
            the RF energy transmitted.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.LowDutyCycleSettings.FieldPingIntervalInMs">
            <summary>
            This property dictates how long singulation is paused once
            the reader has entered low duty cycle mode. After entering
            this mode, the reader will resume singulation after this
            time has elapsed. If tags are detected, full duty cycle is
            resumed.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.SearchModeEntry">
            <summary>
            Describes a single search mode that is available on the reader.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.SearchModeEntry.#ctor">
            <summary>
            Initializes a new instance of the SearchModeEntry class.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.SearchModeEntry.LlrpCode">
            <summary>
            The LLRP code used to select the reader mode.
            Applications should not need this.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.SearchModeEntry.Mode">
            <summary>
            The reader mode as used in <see cref="T:Impinj.OctaneSdk.Settings"/>.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.SearchModeEntry.Description">
            <summary>
            The preferred description for the mode, provided
            for use in GUI dialogs, reports, and other
            human readable forms.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ProgramKillPasswordResult">
            <summary>
            Class that contains the result of 
            <see cref="M:Impinj.OctaneSdk.SpeedwayReader.ProgramKillPassword(Impinj.OctaneSdk.ProgramKillPasswordParams)"/>
            operation
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ProgramKillPasswordResult.#ctor">
            <summary>
            Initializes a new instance of the ProgramKillPasswordResult class 
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ProgramKillPasswordResult.#ctor(Impinj.OctaneSdk.CommonAccessResult)">
            <summary>
            Initializes a new instance of the ProgramKillPasswordResult class 
            from a commonAccessResult instance
            </summary>
            <param name="commonAccessResult">initializer</param>
        </member>
        <member name="M:Impinj.OctaneSdk.ProgramKillPasswordResult.#ctor(Impinj.OctaneSdk.ProgramKillPasswordResult)">
            <summary>
            Initializes a new instance of the ProgramKillPasswordResult class 
            (copy constructor)
            </summary>
            <param name="programKillPasswordResult">instance to copy</param>
        </member>
        <member name="P:Impinj.OctaneSdk.ProgramKillPasswordResult.WriteResult">
            <summary>
            The result status of the kill password programming
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ProgramKillPasswordResult.ReadResult">
            <summary>
            The result status of optional verify
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ProgramKillPasswordResult.LockResult">
            <summary>
            The result status of optional kill Password lock operation
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.PrimitiveLockResult">
            <summary>
            The low level access primitive for conveying the lock primitive
            results.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.PrimitiveLockResult.#ctor">
            <summary>
            Construct a PrimitiveLockResult instance
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.PrimitiveLockResult.#ctor(Impinj.OctaneSdk.PrimitiveLockResult)">
            <summary>
            Construct a PrimitiveLockResult instance
            (copy constructor)
            </summary>
            <param name="primitiveLockResult">instance to copy</param>
        </member>
        <member name="M:Impinj.OctaneSdk.PrimitiveLockResult.Clone">
            <summary>
            Duplicate the instance
            </summary>
            <returns>PrimitiveLockResult</returns>
        </member>
        <member name="P:Impinj.OctaneSdk.PrimitiveLockResult.Result">
            <summary>
            The access result of the lock primitive operation
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.KillTagParams">
            <summary>
            Class used to carry the configuration for the 
            <see cref="M:Impinj.OctaneSdk.SpeedwayReader.KillTag(Impinj.OctaneSdk.KillTagParams)"/>
            operation
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.KillTagParams.#ctor">
            <summary>
            Initializes a new instance of the KillTagParams class
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.KillTagParams.#ctor(Impinj.OctaneSdk.CommonAccessParams)">
            <summary>
            consturct a KillTagParams object from a commonAccessParams object
            </summary>
            <param name="commonAccessParams">initializer</param>
        </member>
        <member name="M:Impinj.OctaneSdk.KillTagParams.#ctor(Impinj.OctaneSdk.KillTagParams)">
            <summary>
            Initializes a new instance of the KillTagParams class
            (copy constructor)
            </summary>
            <param name="killTagParams">instance to copy</param>
        </member>
        <member name="P:Impinj.OctaneSdk.KillTagParams.KillPassword">
            <summary> The kill password for the tag
            </summary>
            <remarks>
            string consists of hexidecimal characters (i.e.
            [0-9a-fA-F]). The kill password is a 32-bit
            number so this string may be up to 8 hexidecimal
            characters.
            </remarks>
        </member>
        <member name="T:Impinj.OctaneSdk.ListOfGpiStatus">
            <summary>
            This class contains a variable-length array of
            <see cref="T:Impinj.OctaneSdk.GpiStatus"/> objects. Different reader products
            support different numbers of general purpose inputs (GPIs)
            and this class encapsulates that varying number.
            </summary>
            <seealso cref="T:Impinj.OctaneSdk.GpiStatus"/>
        </member>
        <member name="F:Impinj.OctaneSdk.ListOfGpiStatus.Elements">
            <summary>
            A variable-length array of <see cref="T:Impinj.OctaneSdk.GpiStatus"/>
            objects.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ListOfGpiStatus.#ctor">
            <summary>
            Initializes a new instance of the ListOfGpiStatus class.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ListOfGpiStatus.#ctor(Impinj.OctaneSdk.ListOfGpiStatus)">
            <summary>
            Initializes a new instance of the ListOfGpiStatus class
            (copy constructor).
            </summary>
            <param name="listOfGpiStatus">
            The object instance to copy.
            </param>
        </member>
        <member name="M:Impinj.OctaneSdk.ListOfGpiStatus.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Implements the GetEnumerator method of the IEnumerator
            interface.
            </summary>
            <returns>
            IEnumerator
            </returns>
        </member>
        <member name="M:Impinj.OctaneSdk.ListOfGpiStatus.GetEnumerator">
            <summary>
            Accessor method for the <see cref="T:Impinj.OctaneSdk.GpiStatus"/> array.
            </summary>
            <returns>
            An enumerator for the <see cref="T:Impinj.OctaneSdk.GpiStatus"/> array.
            </returns>
        </member>
        <member name="M:Impinj.OctaneSdk.ListOfGpiStatus.Add(Impinj.OctaneSdk.GpiStatus)">
            <summary>
            Adds a new <see cref="T:Impinj.OctaneSdk.GpiStatus"/> object to the
            Elements array. The new object is added to the array based
            on the port number found within the object.
            </summary>
            <param name="gpiStatus">
            The <see cref="T:Impinj.OctaneSdk.GpiStatus"/> object to add.
            </param>
        </member>
        <member name="P:Impinj.OctaneSdk.ListOfGpiStatus.Item(System.Int32)">
            <summary>
            Overload of the [] operator. The <see cref="T:Impinj.OctaneSdk.GpiStatus"/>
            object of the specified GPI port is returned.
            </summary>
            <param name="gpiPortNumber">
            The 1-based GPI port number to retrieve.
            </param>
            <returns>
            The requested <see cref="T:Impinj.OctaneSdk.GpiStatus"/> object, if
            present.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when <paramref name="gpiPortNumber"/> is invalid.
            </exception>
        </member>
        <member name="T:Impinj.OctaneSdk.TxFrequencyEntry">
            <summary>
            Describes a single transmit frequency that is
            used by or available on the reader.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TxFrequencyEntry.LlrpCode">
            <summary>
            The LLRP code used to select the reader mode.
            Applications should not need this.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TxFrequencyEntry.Mhz">
            <summary>
            The transmit frequency in Mhz (megahertz)
            as used in <see cref="T:Impinj.OctaneSdk.Settings"/>
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ReportBufferWarnedEventArgs">
            <summary>
            The event that carries reader report buffer warning events to the 
            user application.
            </summary>
            <remarks>
            When the on reader report buffer reaches a warning level
            the application is notified through the the SpeedwayReader class 
            <see cref="M:Impinj.OctaneSdk.SpeedwayReader.OnReportBufferWarned(Impinj.OctaneSdk.ReportBufferWarnedEventArgs)"/> method
            and an instance of this class is passed by reference. 
            </remarks>
        </member>
        <member name="P:Impinj.OctaneSdk.ReportBufferWarnedEventArgs.ReaderIdentity">
            <summary>
            The identity of the reader reporting this event
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ReportBufferWarnedEventArgs.Timestamp">
            <summary>
            The time associated with the event
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ReportBufferWarnedEventArgs.PercentFull">
            <summary>
            How full the buffer was as a percent of the total buffer size
            at the time of this event
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ReaderMode">
            <summary>
            A reader mode controls the bit rates, modulation, and other air
            protocol particulars.
            </summary>
            <remarks>
            Not all modes are available on all models or in all regions.
            As a rule, higher data rates are more
            susceptibility to and source of interference.
            Lower data rates cause less intereference and are more tolerant.
            </remarks>
        </member>
        <member name="F:Impinj.OctaneSdk.ReaderMode.AutoSetDenseReader">
            <summary>
            The reader automatically optimizes singulation
            and data rates in environments with many
            RFID readers.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.ReaderMode.AutoSetSingleReader">
            <summary>
            The reader automatically optimizes singulation
            and data rates in environments with one
            or very few well separated RFID readers.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.ReaderMode.MaxThroughput">
            <summary>
            The reader will use the mode with the highest 
            potential throughput
            regardless of interference 
            </summary>
            <remarks>This may not yield the highest tag read
            rate as interference potential is much greater with this
            mode</remarks>
        </member>
        <member name="F:Impinj.OctaneSdk.ReaderMode.Hybrid">
            <summary>
            
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.ReaderMode.DenseReaderM4">
            <summary>
            A mode that uses a Miller sub-carrier to isolate tag and reader
            communications in frequency allowing multiple readers to 
            operate in close proximity
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.ReaderMode.DenseReaderM8">
            <summary>
            A mode similar to DenseReaderM4 which uses a lower data rate
            and further separates the tag and reader communications 
            frequencies
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.ReaderMode.MaxMiller">
            <summary>
            A mode similar to DenseReaderM4 which uses a higher data rate
            and minimally separates the tag and reader communications 
            frequencies
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.LockType">
            <summary>
            This enumeration conveys the lock state of the memory block on the tag.
            </summary>
            <remarks>
            For more information on tag lock state, see the 
            EPCglobal C1G2 Specification.
            When a memory block is PermaLocked, it can never be unlocked. 
            When a memory block is PermaUnlocked, it can never be locked.
            </remarks>
        </member>
        <member name="F:Impinj.OctaneSdk.LockType.None">
            <summary>
            The lock type is unknown.  
            </summary>
            <remarks>During set commands, this conveys that the 
            lock state should not be changed</remarks>
        </member>
        <member name="F:Impinj.OctaneSdk.LockType.Unlocked">
            <summary>
            Tag memory is unlocked.  Writing of this memory is permitted without 
            the tag access password.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.LockType.Locked">
            <summary>
            Tag memory is locked.  Writing of this memory requires the tag 
            acccess password
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.LockType.PermaUnlocked">
            <summary>
            Tag memory is unlocked permanently and can not be locked in the future
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.LockType.PermaLocked">
            <summary>
            Tag memory is locked permanently and can not be unlocked in the future
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ReadKillPasswordParams">
            <summary>
            Class to carry the configuration for a
            <see cref="M:Impinj.OctaneSdk.SpeedwayReader.ReadKillPassword(Impinj.OctaneSdk.ReadKillPasswordParams)"/> operation
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ReadKillPasswordParams.#ctor">
            <summary>
            Initializes a new instance of the ReadKillPasswordParams class
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ReadKillPasswordParams.#ctor(Impinj.OctaneSdk.CommonAccessParams)">
            <summary>
            Initializes a new instance of the ReadKillPasswordParams class
            from a commonAccessParams instance
            </summary>
            <param name="commonAccessParams">initializer</param>
        </member>
        <member name="M:Impinj.OctaneSdk.ReadKillPasswordParams.#ctor(Impinj.OctaneSdk.ReadKillPasswordParams)">
            <summary>
            Initializes a new instance of the ReadKillPasswordParams class
            (copy constructor)
            </summary>
            <param name="readKillPasswordParams">instance to copy</param>
        </member>
        <member name="T:Impinj.OctaneSdk.PrimitiveWriteResult">
            <summary>
            The low level access primitive for conveying the write
            results.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.PrimitiveWriteResult.#ctor">
            <summary>
            Construct a PrimitiveWriteResult instance
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.PrimitiveWriteResult.#ctor(Impinj.OctaneSdk.PrimitiveWriteResult)">
            <summary>
            Construct a PrimitiveWriteResult instance
            (copy constructor)
            </summary>
            <param name="primitiveWriteResult">instance to copy</param>
        </member>
        <member name="M:Impinj.OctaneSdk.PrimitiveWriteResult.Clone">
            <summary>
            Duplicate the instance
            </summary>
            <returns>PrimitiveWriteResult</returns>
        </member>
        <member name="P:Impinj.OctaneSdk.PrimitiveWriteResult.Result">
            <summary>
            The access result of the Write primitive operation
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.PrimitiveWriteResult.NumWordsWritten">
            <summary>
            The number of words written to the tag
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.PrimitiveReadParams">
            <summary>
            The low level access primitive for reading memory on a tag
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.PrimitiveReadParams.#ctor">
            <summary>
            construct a PrimitiveReadParams instance
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.PrimitiveReadParams.#ctor(Impinj.OctaneSdk.PrimitiveReadParams)">
            <summary>
            construct a PrimitiveReadParams instance
            (copy constructor)
            </summary>
            <param name="primitiveReadParams">instance to copy</param>
        </member>
        <member name="M:Impinj.OctaneSdk.PrimitiveReadParams.Clone">
            <summary>
            Duplicate the instance
            </summary>
            <returns>PrimitiveReadParams</returns>
        </member>
        <member name="P:Impinj.OctaneSdk.PrimitiveReadParams.MemoryBank">
            <summary>
            The tag memory bank to read from 
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.PrimitiveReadParams.WordPointer">
            <summary>
            The offset within the memory bank to start the read
            </summary>
            <remarks>Must be greater than or equal to zero 
            </remarks>
        </member>
        <member name="P:Impinj.OctaneSdk.PrimitiveReadParams.WordCount">
            <summary>
            The number of words to read
            </summary>
            <remarks>Must be greater than zero and 
            less than or equal to <see cref="F:Impinj.OctaneSdk.Constants.MaxReadWordCount"/>
            </remarks>
        </member>
        <member name="T:Impinj.OctaneSdk.TxPowerEntry">
            <summary>
            Describes a single transmit power that is available on the reader.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TxPowerEntry.LlrpCode">
            <summary>
            The LLRP code used to select the reader mode.
            Applications should not need this.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TxPowerEntry.Dbm">
            <summary>
            The transmit power in dBm (decibel milliwatts)
            as used in <see cref="T:Impinj.OctaneSdk.AntennaSettings"/>.
            Typically between 10.00 and 30.00 dBm in 0.25 dBm steps.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.StartedEventArgs">
            <summary>
            The event that carries RFID start information to the
            user application.
            </summary>
            <remarks>
            When the reader turns on its RF interface to perform and RFID
            operation
            the application is notified through the the SpeedwayReader class 
            <see cref="M:Impinj.OctaneSdk.SpeedwayReader.OnStarted(Impinj.OctaneSdk.StartedEventArgs)"/> method
            and an instance of this class is passed by reference. 
            </remarks>
        </member>
        <member name="P:Impinj.OctaneSdk.StartedEventArgs.ReaderIdentity">
            <summary>
            The identity of the reader reporting this event
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.StartedEventArgs.Timestamp">
            <summary>
            The time associated with the event
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.StartedEventArgs.State">
            <summary>
            Operational state of the reader associated with this event
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.LogLevel">
            <summary>
            The level (severity) of a log message.
            </summary>
            <remarks>
            This level is used in log messages such as those
            recorded by <see cref="M:Impinj.OctaneSdk.SpeedwayReader.Log(Impinj.OctaneSdk.LogLevel,System.String,System.Object[])"/>.
            It is also used as a threshold
            in <see cref="P:Impinj.OctaneSdk.SpeedwayReader.LogLevel"/>
            for delivering log messages to the application using
            <see cref="M:Impinj.OctaneSdk.SpeedwayReader.OnLogging(Impinj.OctaneSdk.LoggingEventArgs)"/>.
            </remarks>
        </member>
        <member name="F:Impinj.OctaneSdk.LogLevel.Off">
            <summary>
            Only used in <see cref="P:Impinj.OctaneSdk.SpeedwayReader.LogLevel"/> to
            turn all log messages off.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.LogLevel.Error">
            <summary>
            An error occured and the desired action could
            not be done.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.LogLevel.Warning">
            <summary>
            Something was not quite right but the
            desired action was done.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.LogLevel.Information">
            <summary>
            The log message is information about a significant
            and successful event. Exampe: the reader
            connection being established.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.LogLevel.Verbose">
            <summary>
            Detailed information that is useful when troubleshooting.
            This generally shows internal steps to carry out a
            desired action.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.LogLevel.Trace">
            <summary>
            Extra detailed information that is useful when
            troubleshooting. This generally shows internal methods
            used to carry out a desired action.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.LogLevel.Debug">
            <summary>
            Used for the LTKXML of all message sent to
            or received from the reader. Such messages
            are quite large.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.TagFilterMode">
            <summary>
            This enumeration defines how the two individual filters within
            the reader's filter settings are combined.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TagFilterMode.None">
            <summary>
            This is an invalid value and is used to identify
            uninitialized object properties of this type.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TagFilterMode.OnlyFilter1">
            <summary>
            Only the information contained within the TagFilter1
            property will be used to identify the target tag
            population.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TagFilterMode.Filter1AndFilter2">
            <summary>
            The target tag population are tags that match both
            TagFilter1 AND TagFilter2.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TagFilterMode.Filter1OrFilter2">
            <summary>
            The target tag population are tags that match either
            TagFilter1 OR TagFilter2.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ProgramAccessPasswordResult">
            <summary>
            Class that contains the result of a 
            <see cref="M:Impinj.OctaneSdk.SpeedwayReader.ProgramAccessPassword(Impinj.OctaneSdk.ProgramAccessPasswordParams)"/>
            operation
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ProgramAccessPasswordResult.#ctor">
            <summary>
            Initializes a new instance of the ProgramAccessPasswordResult class 
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ProgramAccessPasswordResult.#ctor(Impinj.OctaneSdk.CommonAccessResult)">
            <summary>
            Initializes a new instance of the ProgramAccessPasswordResult class 
            from a commonAccessResult instance
            </summary>
            <param name="commonAccessResult">initializer</param>
        </member>
        <member name="M:Impinj.OctaneSdk.ProgramAccessPasswordResult.#ctor(Impinj.OctaneSdk.ProgramAccessPasswordResult)">
            <summary>
            Initializes a new instance of the ProgramAccessPasswordResult class 
            (copy constructor)
            </summary>
            <param name="programAccessPasswordResult">instance to copy</param>
        </member>
        <member name="P:Impinj.OctaneSdk.ProgramAccessPasswordResult.WriteResult">
            <summary>
            The result status of the access password programming
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ProgramAccessPasswordResult.ReadResult">
            <summary>
            The result status of optional verify
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ProgramAccessPasswordResult.LockResult">
            <summary>
            The result status of optional accessPassword lock operation
            </summary>
        </member>
    </members>
</doc>
